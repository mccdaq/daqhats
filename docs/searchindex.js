Search.setIndex({"docnames": ["c", "c_test", "hardware", "index", "install", "overview", "python", "python_test"], "filenames": ["c.rst", "c_test.rst", "hardware.rst", "index.rst", "install.rst", "overview.rst", "python.rst", "python_test.rst"], "titles": ["C Library Reference", "C Test Function Reference", "Installing the DAQ HAT board", "MCC DAQ HAT Library documentation", "Installing and Using the Library", "Hardware Overview", "Python Library Reference", "Python Test Function Reference"], "terms": {"The": [0, 1, 2, 4, 5, 6, 7], "i": [0, 1, 2, 4, 5, 6, 7], "organ": [0, 6], "list": [0, 4, 6], "daq": [0, 4, 5, 6], "board": [0, 1, 3, 4, 6, 7], "attach": [0, 2, 4, 5, 6], "your": [0, 4, 5, 6], "system": [0, 4, 6], "specif": [0, 3, 6], "provid": [0, 2, 5, 6], "full": [0, 4, 6], "each": [0, 2, 4, 5, 6], "mai": [0, 4, 5, 6], "us": [0, 1, 3, 5, 6, 7], "descript": [0, 1, 6], "hat_list": [0, 3, 6], "return": [0, 1, 6, 7], "detect": [0, 4, 5, 6], "hat_error_messag": 0, "text": 0, "hat_wait_for_interrupt": 0, "wait": [0, 6], "an": [0, 5, 6, 7], "interrupt": [0, 5, 6], "occur": [0, 5, 6, 7], "hat_interrupt_st": 0, "read": [0, 1, 3, 5, 7], "current": [0, 1, 5, 6, 7], "hat_interrupt_callback_en": 0, "enabl": [0, 6], "callback": [0, 6], "hat_interrupt_callback_dis": 0, "disabl": [0, 6], "int": [0, 1, 6, 7], "uint16_t": 0, "filter_id": 0, "struct": 0, "It": [0, 4, 6], "creat": [0, 3, 5], "from": [0, 2, 5, 6], "eeprom": [0, 4, 6], "file": [0, 4], "ar": [0, 1, 2, 4, 5, 6, 7], "In": [0, 5, 6], "case": [0, 5, 6], "singl": [0, 3, 6], "address": [0, 1, 2, 3, 4, 6, 7], "0": [0, 1, 2, 4, 5, 6, 7], "thi": [0, 1, 2, 3, 4, 5, 6, 7], "inform": [0, 4, 5, 6], "automat": [0, 6], "o": [0, 4, 5, 6], "howev": [0, 5], "when": [0, 1, 4, 5, 6, 7], "you": [0, 4, 5, 6], "have": [0, 2, 4, 5, 6], "stack": [0, 4, 5], "multipl": [0, 3, 5, 6], "must": [0, 1, 2, 4, 5, 6, 7], "extract": 0, "imag": [0, 4], "daqhats_read_eeprom": [0, 4, 6], "tool": [0, 4, 5, 6], "exampl": [0, 4, 5, 6], "usag": 0, "count": [0, 6], "hat_id_ani": 0, "null": 0, "malloc": 0, "sizeof": 0, "perform": [0, 4, 6, 7], "action": [0, 6], "free": [0, 6], "paramet": [0, 1, 6, 7], "filter": [0, 5, 6], "onli": [0, 5, 6], "all": [0, 2, 5, 6], "A": [0, 2, 5, 6, 7], "pointer": 0, "user": [0, 1, 4, 5, 6, 7], "alloc": [0, 6], "arrai": [0, 6], "fill": 0, "about": [0, 5, 6], "maximum": [0, 5, 6], "number": [0, 6], "max_number_hat": 0, "call": [0, 1, 6], "while": [0, 1, 7], "pass": [0, 6], "which": [0, 6], "found": [0, 6], "correct": [0, 4, 6], "amount": [0, 6], "memori": [0, 6], "again": [0, 6], "valid": [0, 6], "const": 0, "char": 0, "error": [0, 4, 5, 6], "messag": 0, "timeout": [0, 6], "signal": [0, 1, 5, 6, 7], "becom": [0, 6], "activ": [0, 5, 6], "appli": [0, 5, 6, 7], "can": [0, 1, 4, 5, 6, 7], "gener": [0, 5, 6], "millisecond": 0, "1": [0, 1, 2, 5, 6, 7], "forev": [0, 6], "immedi": [0, 6], "result_timeout": 0, "result_success": [0, 1], "result_undefin": 0, "void": 0, "share": [0, 1, 4, 5, 6, 7], "so": [0, 2, 4, 5, 6, 7], "": [0, 4, 5, 6], "clear": [0, 6], "befor": [0, 6], "inact": [0, 6], "user_data": [0, 6], "set": [0, 1, 2, 5, 6, 7], "argument": [0, 6], "cannot": [0, 6], "until": [0, 2, 5, 6], "manual": [0, 6], "digit": [0, 3, 6], "If": [0, 4, 5, 6], "latch": [0, 6], "also": [0, 5, 6], "valu": [0, 1, 6, 7], "origin": [0, 5, 6], "wa": [0, 6, 7], "anyth": 0, "need": [0, 4, 6], "There": [0, 2, 6], "one": [0, 4, 5, 6], "time": [0, 4, 5, 6], "alreadi": [0, 1, 6], "replac": [0, 4, 6], "new": [0, 2, 6], "old": [0, 6], "longer": [0, 6], "remov": [0, 2, 5], "ani": [0, 2, 4, 5, 6], "handler": 0, "8": [0, 5, 6], "connect": [0, 2, 5, 6], "enum": 0, "hatid": [0, 6], "known": [0, 6], "enumer": 0, "match": [0, 6], "hat_id_mcc_118": 0, "hat_id_mcc_118_bootload": 0, "firmwar": [0, 3, 6], "updat": [0, 3, 6], "hat_id_mcc_128": 0, "hat_id_mcc_134": 0, "hat_id_mcc_152": 0, "hat_id_mcc_172": 0, "resultcod": 0, "success": [0, 1], "result_bad_paramet": 0, "incorrect": [0, 6, 7], "result_busi": [0, 1], "busi": [0, 6], "access": [0, 2], "resourc": [0, 6], "result_lock_timeout": 0, "obtain": 0, "lock": 0, "result_invalid_devic": 0, "specifi": [0, 1, 6, 7], "result_resource_unavail": 0, "avail": [0, 4, 5, 6], "result_comms_failur": 0, "could": [0, 5, 6], "commun": [0, 5], "some": [0, 6], "other": [0, 5, 6], "contain": [0, 6, 7], "public": 0, "member": 0, "uint8_t": [0, 1], "product": [0, 6], "version": [0, 3, 4, 5, 6], "hardwar": [0, 3, 6], "product_nam": [0, 6], "256": [0, 6], "name": [0, 4, 6, 7], "see": [0, 4, 6], "individu": [0, 6], "document": [0, 4, 5], "detail": [0, 3, 6], "opts_default": 0, "0x0000": 0, "default": [0, 5, 6], "behavior": [0, 6], "opts_noscaledata": 0, "0x0001": 0, "write": [0, 1, 6, 7], "unscal": [0, 6], "opts_nocalibratedata": 0, "0x0002": 0, "uncalibr": [0, 6], "opts_extclock": 0, "0x0004": 0, "extern": [0, 5, 6, 7], "clock": [0, 1, 3, 6, 7], "opts_exttrigg": 0, "0x0008": 0, "opts_continu": 0, "0x0010": 0, "run": [0, 1, 4, 5, 6], "explicitli": [0, 6], "stop": [0, 6], "status_hw_overrun": 0, "overrun": [0, 6], "status_buffer_overrun": 0, "buffer": [0, 5, 6], "status_trigg": 0, "event": [0, 5, 6], "status_run": 0, "acquir": [0, 5, 6], "triggermod": [0, 6], "trig_rising_edg": 0, "start": [0, 4, 5, 6], "rise": [0, 5, 6], "edg": [0, 5, 6], "trig": [0, 1, 5, 6, 7], "trig_falling_edg": 0, "fall": [0, 5, 6], "trig_active_high": 0, "high": [0, 1, 5, 6, 7], "trig_active_low": 0, "low": [0, 1, 5, 6, 7], "mcc118_open": 0, "open": [0, 1, 4, 5, 6], "mcc118_is_open": 0, "check": 0, "mcc118_close": 0, "close": 0, "mcc118_info": 0, "mcc118_blink_l": 0, "blink": [0, 5, 6], "led": [0, 3, 6], "mcc118_firmware_vers": 0, "get": [0, 6], "mcc118_serial": 0, "serial": [0, 6], "mcc118_calibration_d": 0, "calibr": [0, 5, 6], "date": [0, 6], "mcc118_calibration_coefficient_read": 0, "coeffici": [0, 6], "channel": [0, 5, 6], "mcc118_calibration_coefficient_writ": 0, "mcc118_a_in_read": 0, "mcc118_trigger_mod": 0, "mcc118_a_in_scan_actual_r": 0, "actual": [0, 6], "sampl": [0, 5, 6, 7], "rate": [0, 5, 6], "mcc118_a_in_scan_start": 0, "pace": [0, 6], "mcc118_a_in_scan_buffer_s": 0, "size": [0, 6], "intern": [0, 5, 6], "mcc118_a_in_scan_statu": 0, "mcc118_a_in_scan_read": 0, "mcc118_a_in_scan_channel_count": 0, "mcc118_a_in_scan_stop": 0, "mcc118_a_in_scan_cleanup": 0, "7": [0, 1, 2, 4, 5, 6, 7], "mcc118deviceinfo": 0, "constant": [0, 6], "continu": [0, 6], "reset": [0, 6], "non": [0, 6], "zero": [0, 6], "255": [0, 6], "boot_vers": 0, "bootload": [0, 6], "receiv": [0, 1, 6], "bcd": 0, "hexadecim": 0, "byte": 0, "major": 0, "minor": 0, "e": [0, 2, 5, 6], "0x0103": 0, "03": [0, 2, 6], "abov": [0, 2, 5], "string": [0, 6], "least": [0, 6], "9": 0, "charact": 0, "length": 0, "format": [0, 6], "yyyi": [0, 6], "mm": [0, 6], "dd": [0, 6], "11": 0, "doubl": 0, "slope": [0, 6], "offset": [0, 6], "calibrated_adc_cod": [0, 6], "raw_adc_cod": [0, 6], "temporarili": [0, 6], "own": [0, 4, 5, 6], "factori": [0, 5, 6], "whenev": [0, 6], "fail": [0, 6], "uint32_t": 0, "adc": [0, 1, 3, 6, 7], "between": [0, 5, 6], "4095": [0, 6], "rather": [0, 6], "than": [0, 4, 5, 6], "voltag": [0, 5, 6], "without": [0, 6], "factor": [0, 6], "oper": [0, 1, 4, 5, 6], "scale": [0, 6], "ORing": 0, "For": [0, 5, 6], "instanc": 0, "convert": [0, 5, 6], "bitmask": 0, "One": 0, "channel_count": [0, 6], "sample_rate_per_channel": [0, 6], "actual_sample_rate_per_channel": 0, "per": [0, 5, 6], "request": [0, 6], "16": [0, 5, 6], "mhz": [0, 6], "discret": [0, 6], "frequenc": [0, 5, 6], "step": [0, 2, 4, 6], "achiev": [0, 5, 6], "doe": [0, 6, 7], "simpli": [0, 6], "calcul": [0, 6], "desir": [0, 2, 4, 5, 6], "second": [0, 6], "max": [0, 6], "100": [0, 5, 6], "000": [0, 6], "would": [0, 6], "channel_mask": [0, 6], "samples_per_channel": [0, 6], "separ": [0, 6], "thread": [0, 2, 6], "finit": [0, 6], "complet": [0, 6, 7], "after": [0, 1, 6, 7], "ha": [0, 6], "finish": [0, 6], "been": [0, 6], "allow": [0, 4, 5, 6], "addit": [0, 2, 5, 6], "state": [0, 1, 5, 6, 7], "defin": [0, 6], "terminologi": [0, 6], "acquisit": [0, 6], "clean": [0, 6], "up": [0, 2, 5, 6], "anoth": [0, 6], "still": [0, 5, 6], "certain": [0, 5, 6], "like": [0, 2, 6], "becaus": [0, 6], "3": [0, 1, 2, 3, 6, 7], "3v": [0, 3, 6], "5v": [0, 3, 6], "logic": [0, 1, 5, 6], "clk": [0, 1, 5, 6, 7], "synchron": [0, 5, 6, 7], "pin": [0, 1, 2, 5, 6, 7], "togeth": [0, 6], "thei": [0, 5, 6], "its": [0, 6], "hold": [0, 5, 6], "off": [0, 2, 4, 5, 6], "condit": [0, 5, 6], "met": [0, 5, 6], "circular": [0, 6], "being": [0, 2, 6], "overwritten": [0, 6], "avoid": [0, 5, 6], "follow": [0, 2, 5, 6, 7], "total": [0, 6], "either": [0, 2, 6], "tabl": [0, 6], "whichev": [0, 6], "greater": [0, 6], "Not": [0, 6], "10": [0, 3, 6], "k": [0, 5, 6], "10k": [0, 6], "100k": [0, 6], "veri": [0, 6], "larg": [0, 6], "too": [0, 6], "much": [0, 6], "raspberri": [0, 2, 4, 5, 6, 7], "pi": [0, 1, 2, 4, 5, 6, 7], "succe": [0, 6], "lack": [0, 6], "caus": [0, 5, 6], "problem": [0, 5, 6], "better": [0, 6], "bit": [0, 5, 6], "mask": [0, 6], "associ": [0, 6], "0x01": [0, 6], "0xff": [0, 6], "larger": [0, 5, 6], "expect": [0, 6], "buffer_size_sampl": 0, "invalid": [0, 6, 7], "background": [0, 6], "ORed": [0, 6], "combin": [0, 6], "fast": [0, 6], "enough": [0, 6], "lost": [0, 6], "under": [0, 4], "int32_t": 0, "samples_read_per_channel": 0, "ignor": [0, 6], "space": [0, 5], "mani": 0, "fit": 0, "neg": [0, 6], "indefinit": [0, 6], "whatev": 0, "num_ai_channel": [0, 6], "ai_min_cod": [0, 6], "minimum": [0, 6], "ai_max_cod": [0, 6], "ai_min_voltag": [0, 6], "correspond": [0, 6], "0v": 0, "ai_max_voltag": [0, 6], "lsb": [0, 6], "ai_min_rang": [0, 6], "ai_max_rang": [0, 6], "mcc128_open": 0, "mcc128_is_open": 0, "mcc128_close": 0, "mcc128_info": 0, "mcc128_blink_l": 0, "mcc128_firmware_vers": 0, "mcc128_serial": 0, "mcc128_calibration_d": 0, "mcc128_calibration_coefficient_read": 0, "mcc128_calibration_coefficient_writ": 0, "mcc128_trigger_mod": 0, "mcc128_a_in_mode_read": 0, "mcc128_a_in_mode_writ": 0, "mcc128_a_in_range_read": 0, "mcc128_a_in_range_writ": 0, "mcc128_a_in_read": 0, "mcc128_a_in_scan_actual_r": 0, "mcc128_a_in_scan_start": 0, "mcc128_a_in_scan_buffer_s": 0, "mcc128_a_in_scan_statu": 0, "mcc128_a_in_scan_read": 0, "mcc128_a_in_scan_channel_count": 0, "mcc128_a_in_scan_stop": 0, "mcc128_a_in_scan_cleanup": 0, "mcc128deviceinfo": 0, "a_in_mode_s": 0, "end": [0, 1, 3, 6, 7], "rel": [0, 6], "ground": [0, 5, 6], "a_in_mode_diff": 0, "differenti": [0, 3, 6], "4": [0, 2, 4, 5, 6], "posit": [0, 5, 6], "a_in_range_bip_10v": 0, "10v": [0, 6], "a_in_range_bip_5v": 0, "a_in_range_bip_2v": 0, "2v": [0, 5, 6], "a_in_range_bip_1v": 0, "1v": [0, 5, 6], "65535": [0, 6], "num_ai_mod": [0, 6], "2": [0, 1, 2, 5, 6, 7], "num_ai_rang": [0, 6], "5": [0, 2, 4, 5, 6], "analoginputmod": [0, 6], "analoginputrang": [0, 6], "v": [0, 5, 6], "mcc134_open": 0, "mcc134_is_open": 0, "mcc134_close": 0, "mcc134_info": 0, "mcc134_serial": 0, "mcc134_calibration_d": 0, "mcc134_calibration_coefficient_read": 0, "mcc134_calibration_coefficient_writ": 0, "mcc134_tc_type_writ": 0, "mcc134_tc_type_read": 0, "mcc134_update_interval_writ": 0, "temperatur": [0, 5, 6], "interv": [0, 6], "mcc134_update_interval_read": 0, "mcc134_t_in_read": 0, "mcc134_a_in_read": 0, "mcc134_cjc_read": 0, "cjc": [0, 6], "mcc134deviceinfo": 0, "tell": [0, 6], "what": [0, 6], "requir": [0, 6, 7], "tctype": [0, 6], "tc_disabl": 0, "first": [0, 2, 5, 6], "how": [0, 4, 5, 6], "often": [0, 6], "everi": [0, 6], "increas": [0, 5, 6], "do": [0, 5, 6], "plan": [0, 6], "reduc": [0, 5, 6], "load": [0, 5, 6], "degre": [0, 6], "celsiu": [0, 6], "most": [0, 5, 6], "recent": [0, 4, 6], "onc": [0, 2, 6], "delai": [0, 5, 6], "cold": [0, 5, 6], "junction": [0, 5, 6], "compens": [0, 5, 6], "sensor": [0, 5, 6], "special": [0, 6], "indic": [0, 6], "abnorm": [0, 6], "open_tc_valu": [0, 6], "overrange_tc_valu": [0, 6], "overrang": 0, "common_mode_tc_valu": [0, 6], "common": [0, 5, 6], "differ": [0, 6], "388": [0, 6], "608": [0, 6], "607": [0, 6], "termin": [0, 2, 3, 4, 6], "want": [0, 6], "degress": [0, 6], "9999": [0, 6], "8888": [0, 6], "outsid": [0, 6], "7777": [0, 6], "078125v": 0, "tc_type_j": 0, "j": [0, 5, 6], "tc_type_k": 0, "tc_type_t": 0, "t": [0, 2, 5, 6], "tc_type_": 0, "tc_type_r": 0, "r": [0, 5, 6], "tc_type_b": 0, "b": [0, 5, 6], "tc_type_n": 0, "n": [0, 5, 6], "mcc152_open": 0, "mcc152_is_open": 0, "mcc152_close": 0, "mcc152_info": 0, "mcc152_serial": 0, "mcc152_a_out_writ": 0, "output": [0, 1, 5, 6, 7], "mcc152_a_out_write_al": 0, "simultan": [0, 5, 6], "mcc152_dio_reset": 0, "configur": [0, 3, 6], "mcc152_dio_input_read_bit": 0, "mcc152_dio_input_read_port": 0, "mcc152_dio_output_write_bit": 0, "mcc152_dio_output_write_port": 0, "mcc152_dio_output_read_bit": 0, "mcc152_dio_output_read_port": 0, "mcc152_dio_int_status_read_bit": 0, "mcc152_dio_int_status_read_port": 0, "mcc152_dio_config_write_bit": 0, "mcc152_dio_config_write_port": 0, "mcc152_dio_config_read_bit": 0, "mcc152_dio_config_read_port": 0, "mcc152deviceinfo": 0, "volt": 0, "dac": [0, 6], "same": [0, 5, 6], "two": [0, 5, 6], "regist": [0, 6], "invers": [0, 6], "No": [0, 6], "pull": [0, 5, 6], "resistor": [0, 5, 6], "push": [0, 5, 6], "present": [0, 6, 7], "entir": [0, 6], "care": [0, 2, 6], "taken": [0, 6], "chang": [0, 4, 5, 6], "back": [0, 4, 6], "next": [0, 2, 6], "report": [0, 6], "show": [0, 6], "miss": [0, 6], "best": [0, 3, 6], "repres": [0, 6], "order": [0, 4, 6], "etc": [0, 6], "effect": [0, 6], "mcc152_dio_output_writ": 0, "0xf0": 0, "store": [0, 6], "drain": [0, 5, 6], "sever": [0, 6], "written": [0, 6], "select": [0, 5, 6], "dioconfigitem": [0, 6], "dio_direct": 0, "direct": [0, 5, 6], "dio_pull_config": 0, "down": [0, 2, 5, 6], "dio_pull_en": 0, "dio_input_invert": 0, "invert": [0, 6], "normal": [0, 1, 6, 7], "dio_input_latch": 0, "goe": [0, 6], "initi": [0, 6, 7], "port": [0, 5, 6], "keep": [0, 6], "reflect": [0, 6], "level": [0, 1, 5, 6, 7], "dio_output_typ": 0, "affect": [0, 5, 6], "should": [0, 5, 6], "dio_int_mask": 0, "cpu": [0, 6], "determin": [0, 6], "act": [0, 6], "program": [0, 3, 5, 6], "interrrupt": 0, "more": [0, 4, 5, 6], "constantli": [0, 6], "where": [0, 2, 6], "num_dio_channel": [0, 6], "num_ao_channel": [0, 6], "ao_min_cod": [0, 6], "ao_max_cod": [0, 6], "ao_min_voltag": [0, 6], "ao_max_voltag": [0, 6], "ao_min_rang": [0, 6], "ao_max_rang": [0, 6], "mcc172_open": 0, "mcc172_is_open": 0, "mcc172_close": 0, "mcc172_info": 0, "mcc172_blink_l": 0, "mcc172_firmware_vers": 0, "mcc172_serial": 0, "mcc172_calibration_d": 0, "mcc172_calibration_coefficient_read": 0, "mcc172_calibration_coefficient_writ": 0, "mcc172_iepe_config_read": 0, "iep": [0, 5, 6], "mcc172_iepe_config_writ": 0, "mcc172_a_in_sensitivity_read": 0, "sensit": [0, 5, 6], "mcc172_a_in_sensitivity_writ": 0, "mcc172_a_in_clock_config_read": 0, "mcc172_a_in_clock_config_writ": [0, 1], "mcc172_trigger_config": [0, 1], "mcc172_a_in_scan_start": 0, "mcc172_a_in_scan_buffer_s": 0, "mcc172_a_in_scan_statu": 0, "mcc172_a_in_scan_read": 0, "mcc172_a_in_scan_channel_count": 0, "mcc172_a_in_scan_stop": 0, "mcc172_a_in_scan_cleanup": 0, "mcc172deviceinfo": 0, "power": [0, 2, 3, 4, 6], "mv": [0, 5, 6], "mechan": [0, 6], "unit": [0, 6], "1000": [0, 6], "meaning": [0, 6], "sinc": [0, 5, 6], "seismic": [0, 6], "g": [0, 6], "vibrat": [0, 6], "clock_sourc": [0, 6], "sync": [0, 1, 6, 7], "local": [0, 4, 6], "master": [0, 6], "adjust": [0, 6], "slave": [0, 1, 6, 7], "measur": [0, 3, 6], "period": [0, 6], "source_loc": 0, "source_mast": 0, "source_slav": 0, "equal": [0, 6], "loss": [0, 6], "monitor": [0, 6], "syncron": 0, "progress": [0, 6], "51": [0, 5, 6], "khz": [0, 1, 5, 6, 7], "cycl": [0, 5, 6], "consider": [0, 6], "otherwis": [0, 6], "damag": [0, 5, 6], "last": [0, 6], "alwai": [0, 2, 6], "modifi": [0, 6], "never": [0, 6], "stream": [0, 6], "divid": [0, 6], "integ": [0, 6], "data_rate_per_channel": 0, "nearest": [0, 6], "incom": [0, 6], "save": [0, 4, 6], "command": [0, 4, 5, 6], "due": [0, 5, 6], "natur": [0, 5, 6], "d": [0, 2, 5, 6], "39": [0, 5, 6], "come": [0, 2, 5, 6], "notic": [0, 5, 6], "approxim": [0, 5, 6], "prior": [0, 5, 6], "captur": [0, 5, 6], "through": [0, 2, 6], "independ": [0, 6], "possibl": [0, 6], "support": [0, 5, 6], "200": [0, 5, 6], "1024": [0, 6], "1280": [0, 6], "24": [0, 5, 6], "12": [0, 5, 6], "25": [0, 5], "6": [0, 2, 6], "0x03": [0, 6], "sourcetyp": [0, 6], "These": [1, 7], "includ": [1, 2, 4, 7], "manufactur": [1, 7], "target": [1, 7], "mcc118_test_clock": 1, "mcc118_test_trigg": 1, "mode": [1, 3, 5, 7], "scan": [1, 3], "input": [1, 3, 7], "squar": [1, 7], "wave": [1, 7], "result": [1, 3, 5, 6], "code": [1, 3, 4, 6], "mcc172_test_signals_read": 1, "trigger": [1, 3, 7], "mcc172_test_signals_writ": 1, "conjunct": [1, 7], "put": [1, 7], "gpio": [1, 2, 5, 7], "them": [1, 2, 6, 7], "confirm": [1, 7], "locat": [2, 4, 6], "standoff": 2, "typic": [2, 5], "shown": 2, "here": 2, "insert": 2, "male": 2, "portion": 2, "corner": 2, "hole": 2, "top": [2, 5], "secur": 2, "nut": 2, "bottom": 2, "2x20": 2, "receptacl": 2, "extend": [2, 5], "lead": [2, 5], "mcc": 2, "samtec": 2, "ssq": 2, "120": 2, "equival": [2, 5], "onto": 2, "header": [2, 3, 4, 6], "press": 2, "femal": 2, "bend": 2, "look": 2, "jumper": [2, 3], "a0": [2, 5], "a2": [2, 5], "go": [2, 4], "out": 2, "connector": [2, 3], "mount": 2, "line": [2, 4], "slide": 2, "rest": 2, "screw": [2, 3], "lightli": 2, "tighten": 2, "procedur": 2, "field": [2, 6, 7], "wire": 2, "below": [2, 4, 5, 6], "previou": 2, "appropri": 2, "recommend": [2, 5], "method": [2, 3, 5], "increment": [2, 6], "forth": 2, "manner": 2, "y": 2, "appear": 2, "a1": 2, "repeat": [2, 4, 5, 6], "ad": 2, "pdf": 3, "overview": 3, "compat": 3, "118": 3, "compon": 3, "statu": [3, 6], "function": [3, 6], "block": 3, "diagram": 3, "oem": 3, "128": 3, "134": 3, "practic": 3, "accur": 3, "thermocoupl": 3, "152": 3, "dio": 3, "w3": 3, "mix": 3, "172": 3, "32": [3, 6], "coaxial": 3, "alia": 3, "reject": 3, "instal": [3, 5], "c": [3, 5, 6], "python": [3, 5], "refer": [3, 5], "global": 3, "data": [3, 5], "type": [3, 5, 7], "definit": 3, "id": 3, "hatinfo": 3, "structur": 3, "analog": [3, 5], "option": [3, 4], "flag": 3, "devic": [3, 5, 6, 7], "info": [3, 6], "rang": [3, 5], "config": [3, 5], "item": 3, "sourc": [3, 4, 5], "interrupt_st": [3, 6], "wait_for_interrupt": [3, 6], "interrupt_callback_en": [3, 6], "interrupt_callback_dis": [3, 6], "haterror": [3, 7], "class": [3, 7], "mcc118": [3, 6, 7], "mcc128": [3, 6, 7], "mcc134": [3, 6], "mcc152": [3, 6], "mcc172": [3, 6, 7], "project": 4, "host": 4, "http": 4, "github": 4, "com": 4, "mccdaq": 4, "daqhat": [4, 5, 6, 7], "hat": [4, 5], "log": 4, "window": 4, "graphic": 4, "interfac": [4, 5], "packag": [4, 6], "sudo": 4, "apt": 4, "reboot": 4, "upgrad": 4, "git": 4, "download": 4, "folder": 4, "cd": 4, "clone": 4, "build": 4, "content": [4, 6], "sh": 4, "To": [4, 5, 6], "wide": 4, "pip": 4, "discourag": 4, "append": 4, "break": 4, "virtual": 4, "environ": [4, 5], "venv": 4, "path_to_venv": 4, "m": 4, "bin": 4, "note": 4, "encount": 4, "dure": 4, "uininstal": 4, "ioctl": 4, "seen": 4, "kernel": 4, "rpi": 4, "now": 4, "desktop": 4, "manag": 4, "util": 4, "accessori": 4, "menu": 4, "launch": 4, "control": [4, 6], "applic": [4, 5], "simpl": 4, "directori": 4, "displai": [4, 5], "daqhats_list_board": 4, "stackup": 4, "daqhats_vers": 4, "uninstal": 4, "demonstr": [4, 5], "mcc118_firmware_upd": [4, 5], "mcc_118": [4, 5, 6], "hex": [4, 5], "usr": 4, "add": [4, 5], "compil": 4, "find": 4, "h": 4, "libdaqhat": 4, "lib": 4, "linker": 4, "ldaqhat": 4, "studi": 4, "makefil": 4, "import": 4, "adher": 5, "librari": 5, "develop": 5, "model": 5, "40": 5, "26": 5, "brand": 5, "spi": 5, "particular": 5, "lcd": 5, "hdmi": 5, "usual": 5, "prevent": 5, "work": 5, "even": [5, 6], "driver": 5, "probabl": 5, "boot": 5, "txt": 5, "issu": 5, "consult": 5, "electr": 5, "featur": 5, "20": 5, "accuraci": 5, "bidirect": 5, "onboard": 5, "ch": 5, "chx": 5, "softwar": 5, "agnd": 5, "gnd": 5, "dgnd": 5, "identifi": [5, 6], "topic": 5, "turn": [5, 6], "flash": 5, "ttl": 5, "cmo": 5, "lvcmo": 5, "convers": [5, 7], "begin": 5, "design": 5, "unpopul": 5, "instead": 5, "accept": 5, "1x6": 5, "1x10": 5, "standard": 5, "ch0h": 5, "ch0l": 5, "ch3h": 5, "ch3l": 5, "mcc128_firmware_upd": 5, "mcc_128": [5, 6], "fw": 5, "linear": 5, "isol": 5, "harsh": 5, "x": 5, "within": 5, "environment": 5, "excess": 5, "transient": 5, "airflow": 5, "processor": 5, "fulli": 5, "core": 5, "rais": [5, 6, 7], "70": 5, "cooler": 5, "minim": 5, "variat": 5, "place": 5, "awai": 5, "heat": 5, "cool": 5, "sudden": 5, "steadi": 5, "fan": 5, "dissip": 5, "farthest": 5, "signific": 5, "tech": 5, "tip": 5, "ma": 5, "drive": 5, "capabl": 5, "suppli": [5, 6], "programm": 5, "disconnect": 5, "sink": 5, "ao0": 5, "ao1": 5, "aox": 5, "dio0": 5, "dio7": 5, "diox": 5, "vio": 5, "toler": 5, "flow": 5, "limit": [5, 6], "rail": 5, "possibli": 5, "seri": 5, "700": 5, "ohm": 5, "ac": 5, "coupl": 5, "ch0": 5, "ch1": 5, "across": 5, "variou": 5, "At": 5, "cutoff": 5, "fix": 5, "anti": 5, "alias": 5, "transduc": 5, "bandwidth": 5, "lower": 5, "higher": [5, 6], "ensur": 5, "suppress": 5, "mcc172_firmware_upd": 5, "mcc_172": [5, 6], "filter_by_id": 6, "verifi": 6, "namedtupl": [6, 7], "proc": 6, "tree": 6, "element": 6, "str": 6, "true": 6, "fals": 6, "bool": 6, "elaps": 6, "form": 6, "def": 6, "my_funct": 6, "my": 6, "print": 6, "interrupt_enable_callback": 6, "insid": 6, "object": 6, "made": 6, "immut": 6, "except": 6, "none": 6, "modul": 6, "qualnam": 6, "boundari": 6, "322": 6, "326": 6, "mcc_134": 6, "323": 6, "mcc_152": 6, "324": 6, "325": 6, "rising_edg": 6, "falling_edg": 6, "active_high": 6, "active_low": 6, "optionflag": 6, "noscaledata": 6, "nocalibratedata": 6, "extclock": 6, "exttrigg": 6, "did": [6, 7], "respond": [6, 7], "firmware_vers": 6, "blink_l": 6, "calibration_d": 6, "calibration_coefficient_read": 6, "calibration_coefficient_writ": 6, "trigger_mod": 6, "a_in_read": 6, "a_in_scan_actual_r": 6, "a_in_scan_start": 6, "a_in_scan_buffer_s": 6, "a_in_scan_read": 6, "a_in_scan_read_numpi": 6, "numpi": 6, "a_in_scan_channel_count": 6, "a_in_scan_stop": 6, "a_in_scan_cleanup": 6, "static": 6, "float": 6, "bootloader_vers": 6, "01": 6, "incorrectli": [6, 7], "transit": 6, "overrid": 6, "unspecifi": 6, "valueerror": [6, 7], "a_in_scan_statu": 6, "hardware_overrun": 6, "unload": 6, "buffer_overrun": 6, "samples_avail": 6, "expir": 6, "were": 6, "similar": 6, "kei": 6, "float64": 6, "directli": 6, "make": 6, "a_in_mode_read": 6, "a_in_mode_writ": 6, "a_in_range_read": 6, "a_in_range_writ": 6, "a_in_rang": 6, "a_in_mod": 6, "se": 6, "diff": 6, "bip_10v": 6, "bip_5v": 6, "bip_2v": 6, "bip_1v": 6, "tc_type_writ": 6, "tc_type_read": 6, "update_interval_writ": 6, "update_interval_read": 6, "t_in_read": 6, "cjc_read": 6, "078125": 6, "tc_type": 6, "type_j": 6, "type_k": 6, "type_t": 6, "type_": 6, "type_r": 6, "type_b": 6, "type_n": 6, "a_out_writ": 6, "a_out_write_al": 6, "dio_reset": 6, "dio_input_read_bit": 6, "dio_input_read_port": 6, "dio_input_read_tupl": 6, "tupl": 6, "dio_output_write_bit": 6, "dio_output_write_port": 6, "dio_output_write_dict": 6, "dictionari": 6, "dio_output_read_bit": 6, "dio_output_read_port": 6, "dio_output_read_tupl": 6, "dio_int_status_read_bit": 6, "dio_int_status_read_port": 6, "dio_int_status_read_tupl": 6, "dio_config_write_bit": 6, "dio_config_write_port": 6, "dio_config_write_dict": 6, "dio_config_read_bit": 6, "dio_config_read_port": 6, "dio_config_read_tupl": 6, "though": 6, "examin": 6, "els": 6, "compar": 6, "0x05": 6, "value_dict": 6, "pair": 6, "pull_config": 6, "pull_en": 6, "input_invert": 6, "input_latch": 6, "output_typ": 6, "int_mask": 6, "iepe_config_read": 6, "iepe_config_writ": 6, "a_in_sensitivity_read": 6, "a_in_sensitivity_writ": 6, "a_in_clock_config_read": 6, "a_in_clock_config_writ": [6, 7], "trigger_config": [6, 7], "8388608": 6, "8388607": 6, "over": 6, "trigger_sourc": 6, "test_clock": 7, "exercis": 7, "test_trigg": 7, "test_signals_read": 7, "those": 7, "test_signals_writ": 7, "exit": 7}, "objects": {"": [[0, 0, 1, "c.AnalogInputMode.A_IN_MODE_DIFF", "A_IN_MODE_DIFF"], [0, 0, 1, "c.AnalogInputMode.A_IN_MODE_SE", "A_IN_MODE_SE"], [0, 0, 1, "c.AnalogInputRange.A_IN_RANGE_BIP_10V", "A_IN_RANGE_BIP_10V"], [0, 0, 1, "c.AnalogInputRange.A_IN_RANGE_BIP_1V", "A_IN_RANGE_BIP_1V"], [0, 0, 1, "c.AnalogInputRange.A_IN_RANGE_BIP_2V", "A_IN_RANGE_BIP_2V"], [0, 0, 1, "c.AnalogInputRange.A_IN_RANGE_BIP_5V", "A_IN_RANGE_BIP_5V"], [0, 1, 1, "c.AnalogInputMode", "AnalogInputMode"], [0, 1, 1, "c.AnalogInputRange", "AnalogInputRange"], [0, 2, 1, "c.COMMON_MODE_TC_VALUE", "COMMON_MODE_TC_VALUE"], [0, 1, 1, "c.DIOConfigItem", "DIOConfigItem"], [0, 0, 1, "c.DIOConfigItem.DIO_DIRECTION", "DIO_DIRECTION"], [0, 0, 1, "c.DIOConfigItem.DIO_INPUT_INVERT", "DIO_INPUT_INVERT"], [0, 0, 1, "c.DIOConfigItem.DIO_INPUT_LATCH", "DIO_INPUT_LATCH"], [0, 0, 1, "c.DIOConfigItem.DIO_INT_MASK", "DIO_INT_MASK"], [0, 0, 1, "c.DIOConfigItem.DIO_OUTPUT_TYPE", "DIO_OUTPUT_TYPE"], [0, 0, 1, "c.DIOConfigItem.DIO_PULL_CONFIG", "DIO_PULL_CONFIG"], [0, 0, 1, "c.DIOConfigItem.DIO_PULL_ENABLE", "DIO_PULL_ENABLE"], [0, 0, 1, "c.HatIDs.HAT_ID_ANY", "HAT_ID_ANY"], [0, 0, 1, "c.HatIDs.HAT_ID_MCC_118", "HAT_ID_MCC_118"], [0, 0, 1, "c.HatIDs.HAT_ID_MCC_118_BOOTLOADER", "HAT_ID_MCC_118_BOOTLOADER"], [0, 0, 1, "c.HatIDs.HAT_ID_MCC_128", "HAT_ID_MCC_128"], [0, 0, 1, "c.HatIDs.HAT_ID_MCC_134", "HAT_ID_MCC_134"], [0, 0, 1, "c.HatIDs.HAT_ID_MCC_152", "HAT_ID_MCC_152"], [0, 0, 1, "c.HatIDs.HAT_ID_MCC_172", "HAT_ID_MCC_172"], [0, 1, 1, "c.HatIDs", "HatIDs"], [0, 3, 1, "c.HatInfo", "HatInfo"], [0, 2, 1, "c.MAX_NUMBER_HATS", "MAX_NUMBER_HATS"], [0, 3, 1, "c.MCC118DeviceInfo", "MCC118DeviceInfo"], [0, 3, 1, "c.MCC128DeviceInfo", "MCC128DeviceInfo"], [0, 3, 1, "c.MCC134DeviceInfo", "MCC134DeviceInfo"], [0, 3, 1, "c.MCC152DeviceInfo", "MCC152DeviceInfo"], [0, 3, 1, "c.MCC172DeviceInfo", "MCC172DeviceInfo"], [0, 2, 1, "c.OPEN_TC_VALUE", "OPEN_TC_VALUE"], [0, 2, 1, "c.OPTS_CONTINUOUS", "OPTS_CONTINUOUS"], [0, 2, 1, "c.OPTS_DEFAULT", "OPTS_DEFAULT"], [0, 2, 1, "c.OPTS_EXTCLOCK", "OPTS_EXTCLOCK"], [0, 2, 1, "c.OPTS_EXTTRIGGER", "OPTS_EXTTRIGGER"], [0, 2, 1, "c.OPTS_NOCALIBRATEDATA", "OPTS_NOCALIBRATEDATA"], [0, 2, 1, "c.OPTS_NOSCALEDATA", "OPTS_NOSCALEDATA"], [0, 2, 1, "c.OVERRANGE_TC_VALUE", "OVERRANGE_TC_VALUE"], [0, 0, 1, "c.ResultCode.RESULT_BAD_PARAMETER", "RESULT_BAD_PARAMETER"], [0, 0, 1, "c.ResultCode.RESULT_BUSY", "RESULT_BUSY"], [0, 0, 1, "c.ResultCode.RESULT_COMMS_FAILURE", "RESULT_COMMS_FAILURE"], [0, 0, 1, "c.ResultCode.RESULT_INVALID_DEVICE", "RESULT_INVALID_DEVICE"], [0, 0, 1, "c.ResultCode.RESULT_LOCK_TIMEOUT", "RESULT_LOCK_TIMEOUT"], [0, 0, 1, "c.ResultCode.RESULT_RESOURCE_UNAVAIL", "RESULT_RESOURCE_UNAVAIL"], [0, 0, 1, "c.ResultCode.RESULT_SUCCESS", "RESULT_SUCCESS"], [0, 0, 1, "c.ResultCode.RESULT_TIMEOUT", "RESULT_TIMEOUT"], [0, 0, 1, "c.ResultCode.RESULT_UNDEFINED", "RESULT_UNDEFINED"], [0, 1, 1, "c.ResultCode", "ResultCode"], [0, 0, 1, "c.SourceType.SOURCE_LOCAL", "SOURCE_LOCAL"], [0, 0, 1, "c.SourceType.SOURCE_MASTER", "SOURCE_MASTER"], [0, 0, 1, "c.SourceType.SOURCE_SLAVE", "SOURCE_SLAVE"], [0, 2, 1, "c.STATUS_BUFFER_OVERRUN", "STATUS_BUFFER_OVERRUN"], [0, 2, 1, "c.STATUS_HW_OVERRUN", "STATUS_HW_OVERRUN"], [0, 2, 1, "c.STATUS_RUNNING", "STATUS_RUNNING"], [0, 2, 1, "c.STATUS_TRIGGERED", "STATUS_TRIGGERED"], [0, 1, 1, "c.SourceType", "SourceType"], [0, 0, 1, "c.TcTypes.TC_DISABLED", "TC_DISABLED"], [0, 0, 1, "c.TcTypes.TC_TYPE_B", "TC_TYPE_B"], [0, 0, 1, "c.TcTypes.TC_TYPE_E", "TC_TYPE_E"], [0, 0, 1, "c.TcTypes.TC_TYPE_J", "TC_TYPE_J"], [0, 0, 1, "c.TcTypes.TC_TYPE_K", "TC_TYPE_K"], [0, 0, 1, "c.TcTypes.TC_TYPE_N", "TC_TYPE_N"], [0, 0, 1, "c.TcTypes.TC_TYPE_R", "TC_TYPE_R"], [0, 0, 1, "c.TcTypes.TC_TYPE_S", "TC_TYPE_S"], [0, 0, 1, "c.TcTypes.TC_TYPE_T", "TC_TYPE_T"], [0, 0, 1, "c.TriggerMode.TRIG_ACTIVE_HIGH", "TRIG_ACTIVE_HIGH"], [0, 0, 1, "c.TriggerMode.TRIG_ACTIVE_LOW", "TRIG_ACTIVE_LOW"], [0, 0, 1, "c.TriggerMode.TRIG_FALLING_EDGE", "TRIG_FALLING_EDGE"], [0, 0, 1, "c.TriggerMode.TRIG_RISING_EDGE", "TRIG_RISING_EDGE"], [0, 1, 1, "c.TcTypes", "TcTypes"], [0, 1, 1, "c.TriggerMode", "TriggerMode"], [0, 5, 1, "c.hat_error_message", "hat_error_message"], [0, 5, 1, "c.hat_interrupt_callback_disable", "hat_interrupt_callback_disable"], [0, 5, 1, "c.hat_interrupt_callback_enable", "hat_interrupt_callback_enable"], [0, 5, 1, "c.hat_interrupt_state", "hat_interrupt_state"], [0, 5, 1, "c.hat_list", "hat_list"], [0, 5, 1, "c.hat_wait_for_interrupt", "hat_wait_for_interrupt"], [0, 5, 1, "c.mcc118_a_in_read", "mcc118_a_in_read"], [0, 5, 1, "c.mcc118_a_in_scan_actual_rate", "mcc118_a_in_scan_actual_rate"], [0, 5, 1, "c.mcc118_a_in_scan_buffer_size", "mcc118_a_in_scan_buffer_size"], [0, 5, 1, "c.mcc118_a_in_scan_channel_count", "mcc118_a_in_scan_channel_count"], [0, 5, 1, "c.mcc118_a_in_scan_cleanup", "mcc118_a_in_scan_cleanup"], [0, 5, 1, "c.mcc118_a_in_scan_read", "mcc118_a_in_scan_read"], [0, 5, 1, "c.mcc118_a_in_scan_start", "mcc118_a_in_scan_start"], [0, 5, 1, "c.mcc118_a_in_scan_status", "mcc118_a_in_scan_status"], [0, 5, 1, "c.mcc118_a_in_scan_stop", "mcc118_a_in_scan_stop"], [0, 5, 1, "c.mcc118_blink_led", "mcc118_blink_led"], [0, 5, 1, "c.mcc118_calibration_coefficient_read", "mcc118_calibration_coefficient_read"], [0, 5, 1, "c.mcc118_calibration_coefficient_write", "mcc118_calibration_coefficient_write"], [0, 5, 1, "c.mcc118_calibration_date", "mcc118_calibration_date"], [0, 5, 1, "c.mcc118_close", "mcc118_close"], [0, 5, 1, "c.mcc118_firmware_version", "mcc118_firmware_version"], [0, 5, 1, "c.mcc118_info", "mcc118_info"], [0, 5, 1, "c.mcc118_is_open", "mcc118_is_open"], [0, 5, 1, "c.mcc118_open", "mcc118_open"], [0, 5, 1, "c.mcc118_serial", "mcc118_serial"], [1, 5, 1, "c.mcc118_test_clock", "mcc118_test_clock"], [1, 5, 1, "c.mcc118_test_trigger", "mcc118_test_trigger"], [0, 5, 1, "c.mcc118_trigger_mode", "mcc118_trigger_mode"], [0, 5, 1, "c.mcc128_a_in_mode_read", "mcc128_a_in_mode_read"], [0, 5, 1, "c.mcc128_a_in_mode_write", "mcc128_a_in_mode_write"], [0, 5, 1, "c.mcc128_a_in_range_read", "mcc128_a_in_range_read"], [0, 5, 1, "c.mcc128_a_in_range_write", "mcc128_a_in_range_write"], [0, 5, 1, "c.mcc128_a_in_read", "mcc128_a_in_read"], [0, 5, 1, "c.mcc128_a_in_scan_actual_rate", "mcc128_a_in_scan_actual_rate"], [0, 5, 1, "c.mcc128_a_in_scan_buffer_size", "mcc128_a_in_scan_buffer_size"], [0, 5, 1, "c.mcc128_a_in_scan_channel_count", "mcc128_a_in_scan_channel_count"], [0, 5, 1, "c.mcc128_a_in_scan_cleanup", "mcc128_a_in_scan_cleanup"], [0, 5, 1, "c.mcc128_a_in_scan_read", "mcc128_a_in_scan_read"], [0, 5, 1, "c.mcc128_a_in_scan_start", "mcc128_a_in_scan_start"], [0, 5, 1, "c.mcc128_a_in_scan_status", "mcc128_a_in_scan_status"], [0, 5, 1, "c.mcc128_a_in_scan_stop", "mcc128_a_in_scan_stop"], [0, 5, 1, "c.mcc128_blink_led", "mcc128_blink_led"], [0, 5, 1, "c.mcc128_calibration_coefficient_read", "mcc128_calibration_coefficient_read"], [0, 5, 1, "c.mcc128_calibration_coefficient_write", "mcc128_calibration_coefficient_write"], [0, 5, 1, "c.mcc128_calibration_date", "mcc128_calibration_date"], [0, 5, 1, "c.mcc128_close", "mcc128_close"], [0, 5, 1, "c.mcc128_firmware_version", "mcc128_firmware_version"], [0, 5, 1, "c.mcc128_info", "mcc128_info"], [0, 5, 1, "c.mcc128_is_open", "mcc128_is_open"], [0, 5, 1, "c.mcc128_open", "mcc128_open"], [0, 5, 1, "c.mcc128_serial", "mcc128_serial"], [0, 5, 1, "c.mcc128_trigger_mode", "mcc128_trigger_mode"], [0, 5, 1, "c.mcc134_a_in_read", "mcc134_a_in_read"], [0, 5, 1, "c.mcc134_calibration_coefficient_read", "mcc134_calibration_coefficient_read"], [0, 5, 1, "c.mcc134_calibration_coefficient_write", "mcc134_calibration_coefficient_write"], [0, 5, 1, "c.mcc134_calibration_date", "mcc134_calibration_date"], [0, 5, 1, "c.mcc134_cjc_read", "mcc134_cjc_read"], [0, 5, 1, "c.mcc134_close", "mcc134_close"], [0, 5, 1, "c.mcc134_info", "mcc134_info"], [0, 5, 1, "c.mcc134_is_open", "mcc134_is_open"], [0, 5, 1, "c.mcc134_open", "mcc134_open"], [0, 5, 1, "c.mcc134_serial", "mcc134_serial"], [0, 5, 1, "c.mcc134_t_in_read", "mcc134_t_in_read"], [0, 5, 1, "c.mcc134_tc_type_read", "mcc134_tc_type_read"], [0, 5, 1, "c.mcc134_tc_type_write", "mcc134_tc_type_write"], [0, 5, 1, "c.mcc134_update_interval_read", "mcc134_update_interval_read"], [0, 5, 1, "c.mcc134_update_interval_write", "mcc134_update_interval_write"], [0, 5, 1, "c.mcc152_a_out_write", "mcc152_a_out_write"], [0, 5, 1, "c.mcc152_a_out_write_all", "mcc152_a_out_write_all"], [0, 5, 1, "c.mcc152_close", "mcc152_close"], [0, 5, 1, "c.mcc152_dio_config_read_bit", "mcc152_dio_config_read_bit"], [0, 5, 1, "c.mcc152_dio_config_read_port", "mcc152_dio_config_read_port"], [0, 5, 1, "c.mcc152_dio_config_write_bit", "mcc152_dio_config_write_bit"], [0, 5, 1, "c.mcc152_dio_config_write_port", "mcc152_dio_config_write_port"], [0, 5, 1, "c.mcc152_dio_input_read_bit", "mcc152_dio_input_read_bit"], [0, 5, 1, "c.mcc152_dio_input_read_port", "mcc152_dio_input_read_port"], [0, 5, 1, "c.mcc152_dio_int_status_read_bit", "mcc152_dio_int_status_read_bit"], [0, 5, 1, "c.mcc152_dio_int_status_read_port", "mcc152_dio_int_status_read_port"], [0, 5, 1, "c.mcc152_dio_output_read_bit", "mcc152_dio_output_read_bit"], [0, 5, 1, "c.mcc152_dio_output_read_port", "mcc152_dio_output_read_port"], [0, 5, 1, "c.mcc152_dio_output_write_bit", "mcc152_dio_output_write_bit"], [0, 5, 1, "c.mcc152_dio_output_write_port", "mcc152_dio_output_write_port"], [0, 5, 1, "c.mcc152_dio_reset", "mcc152_dio_reset"], [0, 5, 1, "c.mcc152_info", "mcc152_info"], [0, 5, 1, "c.mcc152_is_open", "mcc152_is_open"], [0, 5, 1, "c.mcc152_open", "mcc152_open"], [0, 5, 1, "c.mcc152_serial", "mcc152_serial"], [0, 5, 1, "c.mcc172_a_in_clock_config_read", "mcc172_a_in_clock_config_read"], [0, 5, 1, "c.mcc172_a_in_clock_config_write", "mcc172_a_in_clock_config_write"], [0, 5, 1, "c.mcc172_a_in_scan_buffer_size", "mcc172_a_in_scan_buffer_size"], [0, 5, 1, "c.mcc172_a_in_scan_channel_count", "mcc172_a_in_scan_channel_count"], [0, 5, 1, "c.mcc172_a_in_scan_cleanup", "mcc172_a_in_scan_cleanup"], [0, 5, 1, "c.mcc172_a_in_scan_read", "mcc172_a_in_scan_read"], [0, 5, 1, "c.mcc172_a_in_scan_start", "mcc172_a_in_scan_start"], [0, 5, 1, "c.mcc172_a_in_scan_status", "mcc172_a_in_scan_status"], [0, 5, 1, "c.mcc172_a_in_scan_stop", "mcc172_a_in_scan_stop"], [0, 5, 1, "c.mcc172_a_in_sensitivity_read", "mcc172_a_in_sensitivity_read"], [0, 5, 1, "c.mcc172_a_in_sensitivity_write", "mcc172_a_in_sensitivity_write"], [0, 5, 1, "c.mcc172_blink_led", "mcc172_blink_led"], [0, 5, 1, "c.mcc172_calibration_coefficient_read", "mcc172_calibration_coefficient_read"], [0, 5, 1, "c.mcc172_calibration_coefficient_write", "mcc172_calibration_coefficient_write"], [0, 5, 1, "c.mcc172_calibration_date", "mcc172_calibration_date"], [0, 5, 1, "c.mcc172_close", "mcc172_close"], [0, 5, 1, "c.mcc172_firmware_version", "mcc172_firmware_version"], [0, 5, 1, "c.mcc172_iepe_config_read", "mcc172_iepe_config_read"], [0, 5, 1, "c.mcc172_iepe_config_write", "mcc172_iepe_config_write"], [0, 5, 1, "c.mcc172_info", "mcc172_info"], [0, 5, 1, "c.mcc172_is_open", "mcc172_is_open"], [0, 5, 1, "c.mcc172_open", "mcc172_open"], [0, 5, 1, "c.mcc172_serial", "mcc172_serial"], [1, 5, 1, "c.mcc172_test_signals_read", "mcc172_test_signals_read"], [1, 5, 1, "c.mcc172_test_signals_write", "mcc172_test_signals_write"], [0, 5, 1, "c.mcc172_trigger_config", "mcc172_trigger_config"]], "AnalogInputMode": [[0, 0, 1, "c.AnalogInputMode.A_IN_MODE_DIFF", "A_IN_MODE_DIFF"], [0, 0, 1, "c.AnalogInputMode.A_IN_MODE_SE", "A_IN_MODE_SE"]], "AnalogInputRange": [[0, 0, 1, "c.AnalogInputRange.A_IN_RANGE_BIP_10V", "A_IN_RANGE_BIP_10V"], [0, 0, 1, "c.AnalogInputRange.A_IN_RANGE_BIP_1V", "A_IN_RANGE_BIP_1V"], [0, 0, 1, "c.AnalogInputRange.A_IN_RANGE_BIP_2V", "A_IN_RANGE_BIP_2V"], [0, 0, 1, "c.AnalogInputRange.A_IN_RANGE_BIP_5V", "A_IN_RANGE_BIP_5V"]], "DIOConfigItem": [[0, 0, 1, "c.DIOConfigItem.DIO_DIRECTION", "DIO_DIRECTION"], [0, 0, 1, "c.DIOConfigItem.DIO_INPUT_INVERT", "DIO_INPUT_INVERT"], [0, 0, 1, "c.DIOConfigItem.DIO_INPUT_LATCH", "DIO_INPUT_LATCH"], [0, 0, 1, "c.DIOConfigItem.DIO_INT_MASK", "DIO_INT_MASK"], [0, 0, 1, "c.DIOConfigItem.DIO_OUTPUT_TYPE", "DIO_OUTPUT_TYPE"], [0, 0, 1, "c.DIOConfigItem.DIO_PULL_CONFIG", "DIO_PULL_CONFIG"], [0, 0, 1, "c.DIOConfigItem.DIO_PULL_ENABLE", "DIO_PULL_ENABLE"]], "HatIDs": [[0, 0, 1, "c.HatIDs.HAT_ID_ANY", "HAT_ID_ANY"], [0, 0, 1, "c.HatIDs.HAT_ID_MCC_118", "HAT_ID_MCC_118"], [0, 0, 1, "c.HatIDs.HAT_ID_MCC_118_BOOTLOADER", "HAT_ID_MCC_118_BOOTLOADER"], [0, 0, 1, "c.HatIDs.HAT_ID_MCC_128", "HAT_ID_MCC_128"], [0, 0, 1, "c.HatIDs.HAT_ID_MCC_134", "HAT_ID_MCC_134"], [0, 0, 1, "c.HatIDs.HAT_ID_MCC_152", "HAT_ID_MCC_152"], [0, 0, 1, "c.HatIDs.HAT_ID_MCC_172", "HAT_ID_MCC_172"]], "HatInfo": [[0, 4, 1, "c.HatInfo.address", "address"], [0, 4, 1, "c.HatInfo.id", "id"], [0, 4, 1, "c.HatInfo.product_name", "product_name"], [0, 4, 1, "c.HatInfo.version", "version"]], "MCC118DeviceInfo": [[0, 4, 1, "c.MCC118DeviceInfo.AI_MAX_CODE", "AI_MAX_CODE"], [0, 4, 1, "c.MCC118DeviceInfo.AI_MAX_RANGE", "AI_MAX_RANGE"], [0, 4, 1, "c.MCC118DeviceInfo.AI_MAX_VOLTAGE", "AI_MAX_VOLTAGE"], [0, 4, 1, "c.MCC118DeviceInfo.AI_MIN_CODE", "AI_MIN_CODE"], [0, 4, 1, "c.MCC118DeviceInfo.AI_MIN_RANGE", "AI_MIN_RANGE"], [0, 4, 1, "c.MCC118DeviceInfo.AI_MIN_VOLTAGE", "AI_MIN_VOLTAGE"], [0, 4, 1, "c.MCC118DeviceInfo.NUM_AI_CHANNELS", "NUM_AI_CHANNELS"]], "MCC128DeviceInfo": [[0, 4, 1, "c.MCC128DeviceInfo.AI_MAX_CODE", "AI_MAX_CODE"], [0, 4, 1, "c.MCC128DeviceInfo.AI_MAX_RANGE", "AI_MAX_RANGE"], [0, 4, 1, "c.MCC128DeviceInfo.AI_MAX_VOLTAGE", "AI_MAX_VOLTAGE"], [0, 4, 1, "c.MCC128DeviceInfo.AI_MIN_CODE", "AI_MIN_CODE"], [0, 4, 1, "c.MCC128DeviceInfo.AI_MIN_RANGE", "AI_MIN_RANGE"], [0, 4, 1, "c.MCC128DeviceInfo.AI_MIN_VOLTAGE", "AI_MIN_VOLTAGE"], [0, 4, 1, "c.MCC128DeviceInfo.NUM_AI_CHANNELS", "NUM_AI_CHANNELS"], [0, 4, 1, "c.MCC128DeviceInfo.NUM_AI_MODES", "NUM_AI_MODES"], [0, 4, 1, "c.MCC128DeviceInfo.NUM_AI_RANGES", "NUM_AI_RANGES"]], "MCC134DeviceInfo": [[0, 4, 1, "c.MCC134DeviceInfo.AI_MAX_CODE", "AI_MAX_CODE"], [0, 4, 1, "c.MCC134DeviceInfo.AI_MAX_RANGE", "AI_MAX_RANGE"], [0, 4, 1, "c.MCC134DeviceInfo.AI_MAX_VOLTAGE", "AI_MAX_VOLTAGE"], [0, 4, 1, "c.MCC134DeviceInfo.AI_MIN_CODE", "AI_MIN_CODE"], [0, 4, 1, "c.MCC134DeviceInfo.AI_MIN_RANGE", "AI_MIN_RANGE"], [0, 4, 1, "c.MCC134DeviceInfo.AI_MIN_VOLTAGE", "AI_MIN_VOLTAGE"], [0, 4, 1, "c.MCC134DeviceInfo.NUM_AI_CHANNELS", "NUM_AI_CHANNELS"]], "MCC152DeviceInfo": [[0, 4, 1, "c.MCC152DeviceInfo.AO_MAX_CODE", "AO_MAX_CODE"], [0, 4, 1, "c.MCC152DeviceInfo.AO_MAX_RANGE", "AO_MAX_RANGE"], [0, 4, 1, "c.MCC152DeviceInfo.AO_MAX_VOLTAGE", "AO_MAX_VOLTAGE"], [0, 4, 1, "c.MCC152DeviceInfo.AO_MIN_CODE", "AO_MIN_CODE"], [0, 4, 1, "c.MCC152DeviceInfo.AO_MIN_RANGE", "AO_MIN_RANGE"], [0, 4, 1, "c.MCC152DeviceInfo.AO_MIN_VOLTAGE", "AO_MIN_VOLTAGE"], [0, 4, 1, "c.MCC152DeviceInfo.NUM_AO_CHANNELS", "NUM_AO_CHANNELS"], [0, 4, 1, "c.MCC152DeviceInfo.NUM_DIO_CHANNELS", "NUM_DIO_CHANNELS"]], "MCC172DeviceInfo": [[0, 4, 1, "c.MCC172DeviceInfo.AI_MAX_CODE", "AI_MAX_CODE"], [0, 4, 1, "c.MCC172DeviceInfo.AI_MAX_RANGE", "AI_MAX_RANGE"], [0, 4, 1, "c.MCC172DeviceInfo.AI_MAX_VOLTAGE", "AI_MAX_VOLTAGE"], [0, 4, 1, "c.MCC172DeviceInfo.AI_MIN_CODE", "AI_MIN_CODE"], [0, 4, 1, "c.MCC172DeviceInfo.AI_MIN_RANGE", "AI_MIN_RANGE"], [0, 4, 1, "c.MCC172DeviceInfo.AI_MIN_VOLTAGE", "AI_MIN_VOLTAGE"], [0, 4, 1, "c.MCC172DeviceInfo.NUM_AI_CHANNELS", "NUM_AI_CHANNELS"]], "ResultCode": [[0, 0, 1, "c.ResultCode.RESULT_BAD_PARAMETER", "RESULT_BAD_PARAMETER"], [0, 0, 1, "c.ResultCode.RESULT_BUSY", "RESULT_BUSY"], [0, 0, 1, "c.ResultCode.RESULT_COMMS_FAILURE", "RESULT_COMMS_FAILURE"], [0, 0, 1, "c.ResultCode.RESULT_INVALID_DEVICE", "RESULT_INVALID_DEVICE"], [0, 0, 1, "c.ResultCode.RESULT_LOCK_TIMEOUT", "RESULT_LOCK_TIMEOUT"], [0, 0, 1, "c.ResultCode.RESULT_RESOURCE_UNAVAIL", "RESULT_RESOURCE_UNAVAIL"], [0, 0, 1, "c.ResultCode.RESULT_SUCCESS", "RESULT_SUCCESS"], [0, 0, 1, "c.ResultCode.RESULT_TIMEOUT", "RESULT_TIMEOUT"], [0, 0, 1, "c.ResultCode.RESULT_UNDEFINED", "RESULT_UNDEFINED"]], "SourceType": [[0, 0, 1, "c.SourceType.SOURCE_LOCAL", "SOURCE_LOCAL"], [0, 0, 1, "c.SourceType.SOURCE_MASTER", "SOURCE_MASTER"], [0, 0, 1, "c.SourceType.SOURCE_SLAVE", "SOURCE_SLAVE"]], "TcTypes": [[0, 0, 1, "c.TcTypes.TC_DISABLED", "TC_DISABLED"], [0, 0, 1, "c.TcTypes.TC_TYPE_B", "TC_TYPE_B"], [0, 0, 1, "c.TcTypes.TC_TYPE_E", "TC_TYPE_E"], [0, 0, 1, "c.TcTypes.TC_TYPE_J", "TC_TYPE_J"], [0, 0, 1, "c.TcTypes.TC_TYPE_K", "TC_TYPE_K"], [0, 0, 1, "c.TcTypes.TC_TYPE_N", "TC_TYPE_N"], [0, 0, 1, "c.TcTypes.TC_TYPE_R", "TC_TYPE_R"], [0, 0, 1, "c.TcTypes.TC_TYPE_S", "TC_TYPE_S"], [0, 0, 1, "c.TcTypes.TC_TYPE_T", "TC_TYPE_T"]], "TriggerMode": [[0, 0, 1, "c.TriggerMode.TRIG_ACTIVE_HIGH", "TRIG_ACTIVE_HIGH"], [0, 0, 1, "c.TriggerMode.TRIG_ACTIVE_LOW", "TRIG_ACTIVE_LOW"], [0, 0, 1, "c.TriggerMode.TRIG_FALLING_EDGE", "TRIG_FALLING_EDGE"], [0, 0, 1, "c.TriggerMode.TRIG_RISING_EDGE", "TRIG_RISING_EDGE"]], "hat_error_message": [[0, 6, 1, "c.hat_error_message", "result"]], "hat_interrupt_callback_enable": [[0, 6, 1, "c.hat_interrupt_callback_enable", "function"], [0, 6, 1, "c.hat_interrupt_callback_enable", "user_data"]], "hat_list": [[0, 6, 1, "c.hat_list", "filter_id"], [0, 6, 1, "c.hat_list", "list"]], "hat_wait_for_interrupt": [[0, 6, 1, "c.hat_wait_for_interrupt", "timeout"]], "mcc118_a_in_read": [[0, 6, 1, "c.mcc118_a_in_read", "address"], [0, 6, 1, "c.mcc118_a_in_read", "channel"], [0, 6, 1, "c.mcc118_a_in_read", "options"], [0, 6, 1, "c.mcc118_a_in_read", "value"]], "mcc118_a_in_scan_actual_rate": [[0, 6, 1, "c.mcc118_a_in_scan_actual_rate", "actual_sample_rate_per_channel"], [0, 6, 1, "c.mcc118_a_in_scan_actual_rate", "channel_count"], [0, 6, 1, "c.mcc118_a_in_scan_actual_rate", "sample_rate_per_channel"]], "mcc118_a_in_scan_buffer_size": [[0, 6, 1, "c.mcc118_a_in_scan_buffer_size", "address"], [0, 6, 1, "c.mcc118_a_in_scan_buffer_size", "buffer_size_samples"]], "mcc118_a_in_scan_channel_count": [[0, 6, 1, "c.mcc118_a_in_scan_channel_count", "address"]], "mcc118_a_in_scan_cleanup": [[0, 6, 1, "c.mcc118_a_in_scan_cleanup", "address"]], "mcc118_a_in_scan_read": [[0, 6, 1, "c.mcc118_a_in_scan_read", "address"], [0, 6, 1, "c.mcc118_a_in_scan_read", "buffer"], [0, 6, 1, "c.mcc118_a_in_scan_read", "buffer_size_samples"], [0, 6, 1, "c.mcc118_a_in_scan_read", "samples_per_channel"], [0, 6, 1, "c.mcc118_a_in_scan_read", "samples_read_per_channel"], [0, 6, 1, "c.mcc118_a_in_scan_read", "status"], [0, 6, 1, "c.mcc118_a_in_scan_read", "timeout"]], "mcc118_a_in_scan_start": [[0, 6, 1, "c.mcc118_a_in_scan_start", "address"], [0, 6, 1, "c.mcc118_a_in_scan_start", "channel_mask"], [0, 6, 1, "c.mcc118_a_in_scan_start", "options"], [0, 6, 1, "c.mcc118_a_in_scan_start", "sample_rate_per_channel"], [0, 6, 1, "c.mcc118_a_in_scan_start", "samples_per_channel"]], "mcc118_a_in_scan_status": [[0, 6, 1, "c.mcc118_a_in_scan_status", "address"], [0, 6, 1, "c.mcc118_a_in_scan_status", "samples_per_channel"], [0, 6, 1, "c.mcc118_a_in_scan_status", "status"]], "mcc118_a_in_scan_stop": [[0, 6, 1, "c.mcc118_a_in_scan_stop", "address"]], "mcc118_blink_led": [[0, 6, 1, "c.mcc118_blink_led", "address"], [0, 6, 1, "c.mcc118_blink_led", "count"]], "mcc118_calibration_coefficient_read": [[0, 6, 1, "c.mcc118_calibration_coefficient_read", "address"], [0, 6, 1, "c.mcc118_calibration_coefficient_read", "channel"], [0, 6, 1, "c.mcc118_calibration_coefficient_read", "offset"], [0, 6, 1, "c.mcc118_calibration_coefficient_read", "slope"]], "mcc118_calibration_coefficient_write": [[0, 6, 1, "c.mcc118_calibration_coefficient_write", "address"], [0, 6, 1, "c.mcc118_calibration_coefficient_write", "channel"], [0, 6, 1, "c.mcc118_calibration_coefficient_write", "offset"], [0, 6, 1, "c.mcc118_calibration_coefficient_write", "slope"]], "mcc118_calibration_date": [[0, 6, 1, "c.mcc118_calibration_date", "address"], [0, 6, 1, "c.mcc118_calibration_date", "buffer"]], "mcc118_close": [[0, 6, 1, "c.mcc118_close", "address"]], "mcc118_firmware_version": [[0, 6, 1, "c.mcc118_firmware_version", "address"], [0, 6, 1, "c.mcc118_firmware_version", "boot_version"], [0, 6, 1, "c.mcc118_firmware_version", "version"]], "mcc118_is_open": [[0, 6, 1, "c.mcc118_is_open", "address"]], "mcc118_open": [[0, 6, 1, "c.mcc118_open", "address"]], "mcc118_serial": [[0, 6, 1, "c.mcc118_serial", "address"], [0, 6, 1, "c.mcc118_serial", "buffer"]], "mcc118_test_clock": [[1, 6, 1, "c.mcc118_test_clock", "address"], [1, 6, 1, "c.mcc118_test_clock", "mode"], [1, 6, 1, "c.mcc118_test_clock", "value"]], "mcc118_test_trigger": [[1, 6, 1, "c.mcc118_test_trigger", "address"], [1, 6, 1, "c.mcc118_test_trigger", "state"]], "mcc118_trigger_mode": [[0, 6, 1, "c.mcc118_trigger_mode", "address"], [0, 6, 1, "c.mcc118_trigger_mode", "mode"]], "mcc128_a_in_mode_read": [[0, 6, 1, "c.mcc128_a_in_mode_read", "address"], [0, 6, 1, "c.mcc128_a_in_mode_read", "mode"]], "mcc128_a_in_mode_write": [[0, 6, 1, "c.mcc128_a_in_mode_write", "address"], [0, 6, 1, "c.mcc128_a_in_mode_write", "mode"]], "mcc128_a_in_range_read": [[0, 6, 1, "c.mcc128_a_in_range_read", "address"], [0, 6, 1, "c.mcc128_a_in_range_read", "range"]], "mcc128_a_in_range_write": [[0, 6, 1, "c.mcc128_a_in_range_write", "address"], [0, 6, 1, "c.mcc128_a_in_range_write", "range"]], "mcc128_a_in_read": [[0, 6, 1, "c.mcc128_a_in_read", "address"], [0, 6, 1, "c.mcc128_a_in_read", "channel"], [0, 6, 1, "c.mcc128_a_in_read", "options"], [0, 6, 1, "c.mcc128_a_in_read", "value"]], "mcc128_a_in_scan_actual_rate": [[0, 6, 1, "c.mcc128_a_in_scan_actual_rate", "actual_sample_rate_per_channel"], [0, 6, 1, "c.mcc128_a_in_scan_actual_rate", "channel_count"], [0, 6, 1, "c.mcc128_a_in_scan_actual_rate", "sample_rate_per_channel"]], "mcc128_a_in_scan_buffer_size": [[0, 6, 1, "c.mcc128_a_in_scan_buffer_size", "address"], [0, 6, 1, "c.mcc128_a_in_scan_buffer_size", "buffer_size_samples"]], "mcc128_a_in_scan_channel_count": [[0, 6, 1, "c.mcc128_a_in_scan_channel_count", "address"]], "mcc128_a_in_scan_cleanup": [[0, 6, 1, "c.mcc128_a_in_scan_cleanup", "address"]], "mcc128_a_in_scan_read": [[0, 6, 1, "c.mcc128_a_in_scan_read", "address"], [0, 6, 1, "c.mcc128_a_in_scan_read", "buffer"], [0, 6, 1, "c.mcc128_a_in_scan_read", "buffer_size_samples"], [0, 6, 1, "c.mcc128_a_in_scan_read", "samples_per_channel"], [0, 6, 1, "c.mcc128_a_in_scan_read", "samples_read_per_channel"], [0, 6, 1, "c.mcc128_a_in_scan_read", "status"], [0, 6, 1, "c.mcc128_a_in_scan_read", "timeout"]], "mcc128_a_in_scan_start": [[0, 6, 1, "c.mcc128_a_in_scan_start", "address"], [0, 6, 1, "c.mcc128_a_in_scan_start", "channel_mask"], [0, 6, 1, "c.mcc128_a_in_scan_start", "options"], [0, 6, 1, "c.mcc128_a_in_scan_start", "sample_rate_per_channel"], [0, 6, 1, "c.mcc128_a_in_scan_start", "samples_per_channel"]], "mcc128_a_in_scan_status": [[0, 6, 1, "c.mcc128_a_in_scan_status", "address"], [0, 6, 1, "c.mcc128_a_in_scan_status", "samples_per_channel"], [0, 6, 1, "c.mcc128_a_in_scan_status", "status"]], "mcc128_a_in_scan_stop": [[0, 6, 1, "c.mcc128_a_in_scan_stop", "address"]], "mcc128_blink_led": [[0, 6, 1, "c.mcc128_blink_led", "address"], [0, 6, 1, "c.mcc128_blink_led", "count"]], "mcc128_calibration_coefficient_read": [[0, 6, 1, "c.mcc128_calibration_coefficient_read", "address"], [0, 6, 1, "c.mcc128_calibration_coefficient_read", "offset"], [0, 6, 1, "c.mcc128_calibration_coefficient_read", "range"], [0, 6, 1, "c.mcc128_calibration_coefficient_read", "slope"]], "mcc128_calibration_coefficient_write": [[0, 6, 1, "c.mcc128_calibration_coefficient_write", "address"], [0, 6, 1, "c.mcc128_calibration_coefficient_write", "offset"], [0, 6, 1, "c.mcc128_calibration_coefficient_write", "range"], [0, 6, 1, "c.mcc128_calibration_coefficient_write", "slope"]], "mcc128_calibration_date": [[0, 6, 1, "c.mcc128_calibration_date", "address"], [0, 6, 1, "c.mcc128_calibration_date", "buffer"]], "mcc128_close": [[0, 6, 1, "c.mcc128_close", "address"]], "mcc128_firmware_version": [[0, 6, 1, "c.mcc128_firmware_version", "address"], [0, 6, 1, "c.mcc128_firmware_version", "version"]], "mcc128_is_open": [[0, 6, 1, "c.mcc128_is_open", "address"]], "mcc128_open": [[0, 6, 1, "c.mcc128_open", "address"]], "mcc128_serial": [[0, 6, 1, "c.mcc128_serial", "address"], [0, 6, 1, "c.mcc128_serial", "buffer"]], "mcc128_trigger_mode": [[0, 6, 1, "c.mcc128_trigger_mode", "address"], [0, 6, 1, "c.mcc128_trigger_mode", "mode"]], "mcc134_a_in_read": [[0, 6, 1, "c.mcc134_a_in_read", "address"], [0, 6, 1, "c.mcc134_a_in_read", "channel"], [0, 6, 1, "c.mcc134_a_in_read", "options"], [0, 6, 1, "c.mcc134_a_in_read", "value"]], "mcc134_calibration_coefficient_read": [[0, 6, 1, "c.mcc134_calibration_coefficient_read", "address"], [0, 6, 1, "c.mcc134_calibration_coefficient_read", "channel"], [0, 6, 1, "c.mcc134_calibration_coefficient_read", "offset"], [0, 6, 1, "c.mcc134_calibration_coefficient_read", "slope"]], "mcc134_calibration_coefficient_write": [[0, 6, 1, "c.mcc134_calibration_coefficient_write", "address"], [0, 6, 1, "c.mcc134_calibration_coefficient_write", "channel"], [0, 6, 1, "c.mcc134_calibration_coefficient_write", "offset"], [0, 6, 1, "c.mcc134_calibration_coefficient_write", "slope"]], "mcc134_calibration_date": [[0, 6, 1, "c.mcc134_calibration_date", "address"], [0, 6, 1, "c.mcc134_calibration_date", "buffer"]], "mcc134_cjc_read": [[0, 6, 1, "c.mcc134_cjc_read", "address"], [0, 6, 1, "c.mcc134_cjc_read", "channel"], [0, 6, 1, "c.mcc134_cjc_read", "value"]], "mcc134_close": [[0, 6, 1, "c.mcc134_close", "address"]], "mcc134_is_open": [[0, 6, 1, "c.mcc134_is_open", "address"]], "mcc134_open": [[0, 6, 1, "c.mcc134_open", "address"]], "mcc134_serial": [[0, 6, 1, "c.mcc134_serial", "address"], [0, 6, 1, "c.mcc134_serial", "buffer"]], "mcc134_t_in_read": [[0, 6, 1, "c.mcc134_t_in_read", "address"], [0, 6, 1, "c.mcc134_t_in_read", "channel"], [0, 6, 1, "c.mcc134_t_in_read", "value"]], "mcc134_tc_type_read": [[0, 6, 1, "c.mcc134_tc_type_read", "address"], [0, 6, 1, "c.mcc134_tc_type_read", "channel"], [0, 6, 1, "c.mcc134_tc_type_read", "type"]], "mcc134_tc_type_write": [[0, 6, 1, "c.mcc134_tc_type_write", "address"], [0, 6, 1, "c.mcc134_tc_type_write", "channel"], [0, 6, 1, "c.mcc134_tc_type_write", "type"]], "mcc134_update_interval_read": [[0, 6, 1, "c.mcc134_update_interval_read", "address"], [0, 6, 1, "c.mcc134_update_interval_read", "interval"]], "mcc134_update_interval_write": [[0, 6, 1, "c.mcc134_update_interval_write", "address"], [0, 6, 1, "c.mcc134_update_interval_write", "interval"]], "mcc152_a_out_write": [[0, 6, 1, "c.mcc152_a_out_write", "address"], [0, 6, 1, "c.mcc152_a_out_write", "channel"], [0, 6, 1, "c.mcc152_a_out_write", "options"], [0, 6, 1, "c.mcc152_a_out_write", "value"]], "mcc152_a_out_write_all": [[0, 6, 1, "c.mcc152_a_out_write_all", "address"], [0, 6, 1, "c.mcc152_a_out_write_all", "options"], [0, 6, 1, "c.mcc152_a_out_write_all", "values"]], "mcc152_close": [[0, 6, 1, "c.mcc152_close", "address"]], "mcc152_dio_config_read_bit": [[0, 6, 1, "c.mcc152_dio_config_read_bit", "address"], [0, 6, 1, "c.mcc152_dio_config_read_bit", "channel"], [0, 6, 1, "c.mcc152_dio_config_read_bit", "item"], [0, 6, 1, "c.mcc152_dio_config_read_bit", "value"]], "mcc152_dio_config_read_port": [[0, 6, 1, "c.mcc152_dio_config_read_port", "address"], [0, 6, 1, "c.mcc152_dio_config_read_port", "item"], [0, 6, 1, "c.mcc152_dio_config_read_port", "value"]], "mcc152_dio_config_write_bit": [[0, 6, 1, "c.mcc152_dio_config_write_bit", "address"], [0, 6, 1, "c.mcc152_dio_config_write_bit", "channel"], [0, 6, 1, "c.mcc152_dio_config_write_bit", "item"], [0, 6, 1, "c.mcc152_dio_config_write_bit", "value"]], "mcc152_dio_config_write_port": [[0, 6, 1, "c.mcc152_dio_config_write_port", "address"], [0, 6, 1, "c.mcc152_dio_config_write_port", "item"], [0, 6, 1, "c.mcc152_dio_config_write_port", "value"]], "mcc152_dio_input_read_bit": [[0, 6, 1, "c.mcc152_dio_input_read_bit", "address"], [0, 6, 1, "c.mcc152_dio_input_read_bit", "channel"], [0, 6, 1, "c.mcc152_dio_input_read_bit", "value"]], "mcc152_dio_input_read_port": [[0, 6, 1, "c.mcc152_dio_input_read_port", "address"], [0, 6, 1, "c.mcc152_dio_input_read_port", "value"]], "mcc152_dio_int_status_read_bit": [[0, 6, 1, "c.mcc152_dio_int_status_read_bit", "address"], [0, 6, 1, "c.mcc152_dio_int_status_read_bit", "channel"], [0, 6, 1, "c.mcc152_dio_int_status_read_bit", "value"]], "mcc152_dio_int_status_read_port": [[0, 6, 1, "c.mcc152_dio_int_status_read_port", "address"], [0, 6, 1, "c.mcc152_dio_int_status_read_port", "value"]], "mcc152_dio_output_read_bit": [[0, 6, 1, "c.mcc152_dio_output_read_bit", "address"], [0, 6, 1, "c.mcc152_dio_output_read_bit", "channel"], [0, 6, 1, "c.mcc152_dio_output_read_bit", "value"]], "mcc152_dio_output_read_port": [[0, 6, 1, "c.mcc152_dio_output_read_port", "address"], [0, 6, 1, "c.mcc152_dio_output_read_port", "value"]], "mcc152_dio_output_write_bit": [[0, 6, 1, "c.mcc152_dio_output_write_bit", "address"], [0, 6, 1, "c.mcc152_dio_output_write_bit", "channel"], [0, 6, 1, "c.mcc152_dio_output_write_bit", "value"]], "mcc152_dio_output_write_port": [[0, 6, 1, "c.mcc152_dio_output_write_port", "address"], [0, 6, 1, "c.mcc152_dio_output_write_port", "value"]], "mcc152_dio_reset": [[0, 6, 1, "c.mcc152_dio_reset", "address"]], "mcc152_is_open": [[0, 6, 1, "c.mcc152_is_open", "address"]], "mcc152_open": [[0, 6, 1, "c.mcc152_open", "address"]], "mcc152_serial": [[0, 6, 1, "c.mcc152_serial", "address"], [0, 6, 1, "c.mcc152_serial", "buffer"]], "mcc172_a_in_clock_config_read": [[0, 6, 1, "c.mcc172_a_in_clock_config_read", "address"], [0, 6, 1, "c.mcc172_a_in_clock_config_read", "clock_source"], [0, 6, 1, "c.mcc172_a_in_clock_config_read", "sample_rate_per_channel"], [0, 6, 1, "c.mcc172_a_in_clock_config_read", "synced"]], "mcc172_a_in_clock_config_write": [[0, 6, 1, "c.mcc172_a_in_clock_config_write", "address"], [0, 6, 1, "c.mcc172_a_in_clock_config_write", "clock_source"], [0, 6, 1, "c.mcc172_a_in_clock_config_write", "sample_rate_per_channel"]], "mcc172_a_in_scan_buffer_size": [[0, 6, 1, "c.mcc172_a_in_scan_buffer_size", "address"], [0, 6, 1, "c.mcc172_a_in_scan_buffer_size", "buffer_size_samples"]], "mcc172_a_in_scan_channel_count": [[0, 6, 1, "c.mcc172_a_in_scan_channel_count", "address"]], "mcc172_a_in_scan_cleanup": [[0, 6, 1, "c.mcc172_a_in_scan_cleanup", "address"]], "mcc172_a_in_scan_read": [[0, 6, 1, "c.mcc172_a_in_scan_read", "address"], [0, 6, 1, "c.mcc172_a_in_scan_read", "buffer"], [0, 6, 1, "c.mcc172_a_in_scan_read", "buffer_size_samples"], [0, 6, 1, "c.mcc172_a_in_scan_read", "samples_per_channel"], [0, 6, 1, "c.mcc172_a_in_scan_read", "samples_read_per_channel"], [0, 6, 1, "c.mcc172_a_in_scan_read", "status"], [0, 6, 1, "c.mcc172_a_in_scan_read", "timeout"]], "mcc172_a_in_scan_start": [[0, 6, 1, "c.mcc172_a_in_scan_start", "address"], [0, 6, 1, "c.mcc172_a_in_scan_start", "channel_mask"], [0, 6, 1, "c.mcc172_a_in_scan_start", "options"], [0, 6, 1, "c.mcc172_a_in_scan_start", "samples_per_channel"]], "mcc172_a_in_scan_status": [[0, 6, 1, "c.mcc172_a_in_scan_status", "address"], [0, 6, 1, "c.mcc172_a_in_scan_status", "samples_per_channel"], [0, 6, 1, "c.mcc172_a_in_scan_status", "status"]], "mcc172_a_in_scan_stop": [[0, 6, 1, "c.mcc172_a_in_scan_stop", "address"]], "mcc172_a_in_sensitivity_read": [[0, 6, 1, "c.mcc172_a_in_sensitivity_read", "address"], [0, 6, 1, "c.mcc172_a_in_sensitivity_read", "channel"], [0, 6, 1, "c.mcc172_a_in_sensitivity_read", "value"]], "mcc172_a_in_sensitivity_write": [[0, 6, 1, "c.mcc172_a_in_sensitivity_write", "address"], [0, 6, 1, "c.mcc172_a_in_sensitivity_write", "channel"], [0, 6, 1, "c.mcc172_a_in_sensitivity_write", "value"]], "mcc172_blink_led": [[0, 6, 1, "c.mcc172_blink_led", "address"], [0, 6, 1, "c.mcc172_blink_led", "count"]], "mcc172_calibration_coefficient_read": [[0, 6, 1, "c.mcc172_calibration_coefficient_read", "address"], [0, 6, 1, "c.mcc172_calibration_coefficient_read", "channel"], [0, 6, 1, "c.mcc172_calibration_coefficient_read", "offset"], [0, 6, 1, "c.mcc172_calibration_coefficient_read", "slope"]], "mcc172_calibration_coefficient_write": [[0, 6, 1, "c.mcc172_calibration_coefficient_write", "address"], [0, 6, 1, "c.mcc172_calibration_coefficient_write", "channel"], [0, 6, 1, "c.mcc172_calibration_coefficient_write", "offset"], [0, 6, 1, "c.mcc172_calibration_coefficient_write", "slope"]], "mcc172_calibration_date": [[0, 6, 1, "c.mcc172_calibration_date", "address"], [0, 6, 1, "c.mcc172_calibration_date", "buffer"]], "mcc172_close": [[0, 6, 1, "c.mcc172_close", "address"]], "mcc172_firmware_version": [[0, 6, 1, "c.mcc172_firmware_version", "address"], [0, 6, 1, "c.mcc172_firmware_version", "version"]], "mcc172_iepe_config_read": [[0, 6, 1, "c.mcc172_iepe_config_read", "address"], [0, 6, 1, "c.mcc172_iepe_config_read", "channel"], [0, 6, 1, "c.mcc172_iepe_config_read", "config"]], "mcc172_iepe_config_write": [[0, 6, 1, "c.mcc172_iepe_config_write", "address"], [0, 6, 1, "c.mcc172_iepe_config_write", "channel"], [0, 6, 1, "c.mcc172_iepe_config_write", "config"]], "mcc172_is_open": [[0, 6, 1, "c.mcc172_is_open", "address"]], "mcc172_open": [[0, 6, 1, "c.mcc172_open", "address"]], "mcc172_serial": [[0, 6, 1, "c.mcc172_serial", "address"], [0, 6, 1, "c.mcc172_serial", "buffer"]], "mcc172_test_signals_read": [[1, 6, 1, "c.mcc172_test_signals_read", "address"], [1, 6, 1, "c.mcc172_test_signals_read", "clock"], [1, 6, 1, "c.mcc172_test_signals_read", "sync"], [1, 6, 1, "c.mcc172_test_signals_read", "trigger"]], "mcc172_test_signals_write": [[1, 6, 1, "c.mcc172_test_signals_write", "address"], [1, 6, 1, "c.mcc172_test_signals_write", "clock"], [1, 6, 1, "c.mcc172_test_signals_write", "mode"], [1, 6, 1, "c.mcc172_test_signals_write", "sync"]], "mcc172_trigger_config": [[0, 6, 1, "c.mcc172_trigger_config", "address"], [0, 6, 1, "c.mcc172_trigger_config", "mode"], [0, 6, 1, "c.mcc172_trigger_config", "source"]], "daqhats": [[6, 7, 1, "", "AnalogInputMode"], [6, 7, 1, "", "AnalogInputRange"], [6, 7, 1, "", "DIOConfigItem"], [6, 9, 1, "", "HatError"], [6, 7, 1, "", "HatIDs"], [6, 7, 1, "", "OptionFlags"], [6, 7, 1, "", "SourceType"], [6, 7, 1, "", "TcTypes"], [6, 7, 1, "", "TriggerModes"], [6, 10, 1, "", "hat_list"], [6, 10, 1, "", "interrupt_callback_disable"], [6, 10, 1, "", "interrupt_callback_enable"], [6, 10, 1, "", "interrupt_state"], [6, 7, 1, "", "mcc118"], [6, 7, 1, "", "mcc128"], [6, 7, 1, "", "mcc134"], [6, 7, 1, "", "mcc152"], [6, 7, 1, "", "mcc172"], [6, 10, 1, "", "wait_for_interrupt"]], "daqhats.AnalogInputMode": [[6, 8, 1, "", "DIFF"], [6, 8, 1, "", "SE"]], "daqhats.AnalogInputRange": [[6, 8, 1, "", "BIP_10V"], [6, 8, 1, "", "BIP_1V"], [6, 8, 1, "", "BIP_2V"], [6, 8, 1, "", "BIP_5V"]], "daqhats.DIOConfigItem": [[6, 8, 1, "", "DIRECTION"], [6, 8, 1, "", "INPUT_INVERT"], [6, 8, 1, "", "INPUT_LATCH"], [6, 8, 1, "", "INT_MASK"], [6, 8, 1, "", "OUTPUT_TYPE"], [6, 8, 1, "", "PULL_CONFIG"], [6, 8, 1, "", "PULL_ENABLE"]], "daqhats.HatIDs": [[6, 8, 1, "", "ANY"], [6, 8, 1, "", "MCC_118"], [6, 8, 1, "", "MCC_128"], [6, 8, 1, "", "MCC_134"], [6, 8, 1, "", "MCC_152"], [6, 8, 1, "", "MCC_172"]], "daqhats.OptionFlags": [[6, 8, 1, "", "CONTINUOUS"], [6, 8, 1, "", "DEFAULT"], [6, 8, 1, "", "EXTCLOCK"], [6, 8, 1, "", "EXTTRIGGER"], [6, 8, 1, "", "NOCALIBRATEDATA"], [6, 8, 1, "", "NOSCALEDATA"], [6, 8, 1, "", "TEMPERATURE"]], "daqhats.SourceType": [[6, 8, 1, "", "LOCAL"], [6, 8, 1, "", "MASTER"], [6, 8, 1, "", "SLAVE"]], "daqhats.TcTypes": [[6, 8, 1, "", "DISABLED"], [6, 8, 1, "", "TYPE_B"], [6, 8, 1, "", "TYPE_E"], [6, 8, 1, "", "TYPE_J"], [6, 8, 1, "", "TYPE_K"], [6, 8, 1, "", "TYPE_N"], [6, 8, 1, "", "TYPE_R"], [6, 8, 1, "", "TYPE_S"], [6, 8, 1, "", "TYPE_T"]], "daqhats.TriggerModes": [[6, 8, 1, "", "ACTIVE_HIGH"], [6, 8, 1, "", "ACTIVE_LOW"], [6, 8, 1, "", "FALLING_EDGE"], [6, 8, 1, "", "RISING_EDGE"]], "daqhats.mcc118": [[6, 11, 1, "", "a_in_read"], [6, 11, 1, "", "a_in_scan_actual_rate"], [6, 11, 1, "", "a_in_scan_buffer_size"], [6, 11, 1, "", "a_in_scan_channel_count"], [6, 11, 1, "", "a_in_scan_cleanup"], [6, 11, 1, "", "a_in_scan_read"], [6, 11, 1, "", "a_in_scan_read_numpy"], [6, 11, 1, "", "a_in_scan_start"], [6, 11, 1, "", "a_in_scan_status"], [6, 11, 1, "", "a_in_scan_stop"], [6, 11, 1, "", "address"], [6, 11, 1, "", "blink_led"], [6, 11, 1, "", "calibration_coefficient_read"], [6, 11, 1, "", "calibration_coefficient_write"], [6, 11, 1, "", "calibration_date"], [6, 11, 1, "", "firmware_version"], [6, 11, 1, "", "info"], [6, 11, 1, "", "serial"], [6, 11, 1, "", "trigger_mode"]], "daqhats.mcc128": [[6, 11, 1, "", "a_in_mode_read"], [6, 11, 1, "", "a_in_mode_write"], [6, 11, 1, "", "a_in_range_read"], [6, 11, 1, "", "a_in_range_write"], [6, 11, 1, "", "a_in_read"], [6, 11, 1, "", "a_in_scan_actual_rate"], [6, 11, 1, "", "a_in_scan_buffer_size"], [6, 11, 1, "", "a_in_scan_channel_count"], [6, 11, 1, "", "a_in_scan_cleanup"], [6, 11, 1, "", "a_in_scan_read"], [6, 11, 1, "", "a_in_scan_read_numpy"], [6, 11, 1, "", "a_in_scan_start"], [6, 11, 1, "", "a_in_scan_status"], [6, 11, 1, "", "a_in_scan_stop"], [6, 11, 1, "", "address"], [6, 11, 1, "", "blink_led"], [6, 11, 1, "", "calibration_coefficient_read"], [6, 11, 1, "", "calibration_coefficient_write"], [6, 11, 1, "", "calibration_date"], [6, 11, 1, "", "firmware_version"], [6, 11, 1, "", "info"], [6, 11, 1, "", "serial"], [6, 11, 1, "", "trigger_mode"]], "daqhats.mcc134": [[6, 8, 1, "", "COMMON_MODE_TC_VALUE"], [6, 8, 1, "", "OPEN_TC_VALUE"], [6, 8, 1, "", "OVERRANGE_TC_VALUE"], [6, 11, 1, "", "a_in_read"], [6, 11, 1, "", "address"], [6, 11, 1, "", "calibration_coefficient_read"], [6, 11, 1, "", "calibration_coefficient_write"], [6, 11, 1, "", "calibration_date"], [6, 11, 1, "", "cjc_read"], [6, 11, 1, "", "info"], [6, 11, 1, "", "serial"], [6, 11, 1, "", "t_in_read"], [6, 11, 1, "", "tc_type_read"], [6, 11, 1, "", "tc_type_write"], [6, 11, 1, "", "update_interval_read"], [6, 11, 1, "", "update_interval_write"]], "daqhats.mcc152": [[6, 11, 1, "", "a_out_write"], [6, 11, 1, "", "a_out_write_all"], [6, 11, 1, "", "address"], [6, 11, 1, "", "dio_config_read_bit"], [6, 11, 1, "", "dio_config_read_port"], [6, 11, 1, "", "dio_config_read_tuple"], [6, 11, 1, "", "dio_config_write_bit"], [6, 11, 1, "", "dio_config_write_dict"], [6, 11, 1, "", "dio_config_write_port"], [6, 11, 1, "", "dio_input_read_bit"], [6, 11, 1, "", "dio_input_read_port"], [6, 11, 1, "", "dio_input_read_tuple"], [6, 11, 1, "", "dio_int_status_read_bit"], [6, 11, 1, "", "dio_int_status_read_port"], [6, 11, 1, "", "dio_int_status_read_tuple"], [6, 11, 1, "", "dio_output_read_bit"], [6, 11, 1, "", "dio_output_read_port"], [6, 11, 1, "", "dio_output_read_tuple"], [6, 11, 1, "", "dio_output_write_bit"], [6, 11, 1, "", "dio_output_write_dict"], [6, 11, 1, "", "dio_output_write_port"], [6, 11, 1, "", "dio_reset"], [6, 11, 1, "", "info"], [6, 11, 1, "", "serial"]], "daqhats.mcc172": [[6, 11, 1, "", "a_in_clock_config_read"], [6, 11, 1, "", "a_in_clock_config_write"], [6, 11, 1, "", "a_in_scan_actual_rate"], [6, 11, 1, "", "a_in_scan_buffer_size"], [6, 11, 1, "", "a_in_scan_channel_count"], [6, 11, 1, "", "a_in_scan_cleanup"], [6, 11, 1, "", "a_in_scan_read"], [6, 11, 1, "", "a_in_scan_read_numpy"], [6, 11, 1, "", "a_in_scan_start"], [6, 11, 1, "", "a_in_scan_status"], [6, 11, 1, "", "a_in_scan_stop"], [6, 11, 1, "", "a_in_sensitivity_read"], [6, 11, 1, "", "a_in_sensitivity_write"], [6, 11, 1, "", "address"], [6, 11, 1, "", "blink_led"], [6, 11, 1, "", "calibration_coefficient_read"], [6, 11, 1, "", "calibration_coefficient_write"], [6, 11, 1, "", "calibration_date"], [6, 11, 1, "", "firmware_version"], [6, 11, 1, "", "iepe_config_read"], [6, 11, 1, "", "iepe_config_write"], [6, 11, 1, "", "info"], [6, 11, 1, "", "serial"], [6, 11, 1, "", "trigger_config"]]}, "objtypes": {"0": "c:enumerator", "1": "c:enum", "2": "c:macro", "3": "c:struct", "4": "c:member", "5": "c:function", "6": "c:functionParam", "7": "py:class", "8": "py:attribute", "9": "py:exception", "10": "py:function", "11": "py:method"}, "objnames": {"0": ["c", "enumerator", "C enumerator"], "1": ["c", "enum", "C enum"], "2": ["c", "macro", "C macro"], "3": ["c", "struct", "C struct"], "4": ["c", "member", "C member"], "5": ["c", "function", "C function"], "6": ["c", "functionParam", "C function parameter"], "7": ["py", "class", "Python class"], "8": ["py", "attribute", "Python attribute"], "9": ["py", "exception", "Python exception"], "10": ["py", "function", "Python function"], "11": ["py", "method", "Python method"]}, "titleterms": {"c": [0, 1, 4], "librari": [0, 3, 4, 6], "refer": [0, 1, 6, 7], "global": [0, 6], "function": [0, 1, 5, 7], "data": [0, 6], "type": [0, 6], "definit": 0, "hat": [0, 2, 3, 6], "id": [0, 6], "result": 0, "code": 0, "hatinfo": 0, "structur": 0, "analog": [0, 6], "input": [0, 5, 6], "scan": [0, 5, 6], "option": [0, 6], "flag": [0, 6], "statu": [0, 5], "trigger": [0, 5, 6], "mode": [0, 6], "mcc": [0, 1, 3, 4, 5, 6, 7], "118": [0, 1, 4, 5, 6, 7], "devic": 0, "info": 0, "128": [0, 5, 6, 7], "rang": [0, 6], "134": [0, 5, 6], "thermocoupl": [0, 5, 6], "152": [0, 5, 6], "dio": [0, 5, 6], "config": [0, 6], "item": [0, 6], "172": [0, 1, 5, 6, 7], "sourc": [0, 6], "test": [1, 7], "instal": [2, 4], "daq": [2, 3], "board": [2, 5], "singl": [2, 5], "multipl": 2, "document": 3, "us": 4, "firmwar": [4, 5], "updat": [4, 5], "creat": 4, "program": 4, "python": [4, 6, 7], "hardwar": 5, "overview": 5, "compat": 5, "compon": 5, "screw": 5, "termin": 5, "address": 5, "jumper": 5, "led": 5, "header": 5, "connector": 5, "block": 5, "diagram": 5, "detail": 5, "clock": 5, "oem": 5, "specif": 5, "end": 5, "configur": 5, "differenti": 5, "best": 5, "practic": 5, "accur": 5, "measur": 5, "power": 5, "w3": 5, "mix": 5, "3": 5, "3v": 5, "5v": 5, "digit": 5, "10": 5, "32": 5, "coaxial": 5, "adc": 5, "alia": 5, "reject": 5, "method": [6, 7], "read": 6, "haterror": 6, "class": 6}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"C Library Reference": [[0, "c-library-reference"]], "Global functions and data": [[0, "global-functions-and-data"]], "Functions": [[0, "functions"], [0, "id1"], [0, "id2"], [0, "id5"], [0, "id8"], [0, "id11"]], "Data types and definitions": [[0, "data-types-and-definitions"], [0, "id9"]], "HAT IDs": [[0, "hat-ids"]], "Result Codes": [[0, "result-codes"]], "HatInfo structure": [[0, "hatinfo-structure"]], "Analog Input / Scan Option Flags": [[0, "analog-input-scan-option-flags"]], "Scan Status Flags": [[0, "scan-status-flags"]], "Trigger Modes": [[0, "trigger-modes"]], "MCC 118 functions and data": [[0, "mcc-118-functions-and-data"]], "Data definitions": [[0, "data-definitions"], [0, "id3"], [0, "id6"], [0, "id12"]], "Device Info": [[0, "device-info"], [0, "id4"], [0, "id7"], [0, "id10"], [0, "id13"]], "MCC 128 functions and data": [[0, "mcc-128-functions-and-data"]], "Analog Input Modes": [[0, "analog-input-modes"]], "Analog Input Ranges": [[0, "analog-input-ranges"]], "MCC 134 functions and data": [[0, "mcc-134-functions-and-data"]], "Thermocouple Types": [[0, "thermocouple-types"]], "MCC 152 functions and data": [[0, "mcc-152-functions-and-data"]], "DIO Config Items": [[0, "dio-config-items"], [6, "dio-config-items"]], "MCC 172 functions and data": [[0, "mcc-172-functions-and-data"]], "Source Types": [[0, "source-types"]], "C Test Function Reference": [[1, "c-test-function-reference"]], "MCC 118 test functions": [[1, "mcc-118-test-functions"]], "MCC 172 test functions": [[1, "mcc-172-test-functions"]], "Installing the DAQ HAT board": [[2, "installing-the-daq-hat-board"]], "Installing a single board": [[2, "installing-a-single-board"]], "Installing multiple boards": [[2, "installing-multiple-boards"]], "MCC DAQ HAT Library documentation": [[3, "mcc-daq-hat-library-documentation"]], "Installing and Using the Library": [[4, "installing-and-using-the-library"]], "Installation": [[4, "installation"]], "Firmware Updates": [[4, "firmware-updates"]], "MCC 118": [[4, "mcc-118"], [5, "mcc-118"]], "Creating a C program": [[4, "creating-a-c-program"]], "Creating a Python program": [[4, "creating-a-python-program"]], "Hardware Overview": [[5, "hardware-overview"]], "Hardware Compatibility": [[5, "hardware-compatibility"]], "Board components": [[5, "board-components"], [5, "id1"], [5, "id12"], [5, "id20"], [5, "id28"]], "Screw terminals": [[5, "screw-terminals"], [5, "id2"], [5, "id13"], [5, "id21"], [5, "id29"]], "Address jumpers": [[5, "address-jumpers"], [5, "id3"], [5, "id14"], [5, "id22"], [5, "id30"]], "Status LED": [[5, "status-led"], [5, "id4"], [5, "id15"], [5, "id23"], [5, "id31"]], "Header connector": [[5, "header-connector"], [5, "id5"], [5, "id16"], [5, "id24"], [5, "id32"]], "Functional block diagram": [[5, "functional-block-diagram"], [5, "id6"], [5, "id17"], [5, "id25"], [5, "id33"]], "Functional details": [[5, "functional-details"], [5, "id7"], [5, "id18"], [5, "id26"], [5, "id34"]], "Scan clock": [[5, "scan-clock"], [5, "id8"]], "Trigger": [[5, "trigger"], [5, "id9"], [5, "id35"]], "Firmware updates": [[5, "firmware-updates"], [5, "id10"], [5, "id36"]], "MCC 118-OEM": [[5, "mcc-118-oem"]], "Specifications": [[5, "specifications"], [5, "id11"], [5, "id19"], [5, "id27"], [5, "id37"]], "MCC 128": [[5, "mcc-128"]], "Single Ended Input configuration": [[5, "single-ended-input-configuration"]], "Differential Input Configuration": [[5, "differential-input-configuration"]], "MCC 128-OEM": [[5, "mcc-128-oem"]], "MCC 134": [[5, "mcc-134"]], "Best practices for accurate thermocouple measurements": [[5, "best-practices-for-accurate-thermocouple-measurements"]], "MCC 152": [[5, "mcc-152"]], "DIO Power jumper (W3)": [[5, "dio-power-jumper-w3"]], "Mixing 3.3V and 5V digital inputs": [[5, "mixing-3-3v-and-5v-digital-inputs"]], "MCC 172": [[5, "mcc-172"]], "10-32 coaxial connectors": [[5, "coaxial-connectors"]], "ADC clock": [[5, "adc-clock"]], "Alias Rejection": [[5, "alias-rejection"]], "Python Library Reference": [[6, "python-library-reference"]], "Global methods and data": [[6, "global-methods-and-data"]], "Methods": [[6, "methods"], [6, "id1"], [6, "id2"], [6, "id4"], [6, "id6"], [6, "id8"]], "Data": [[6, "data"], [6, "id3"], [6, "id5"], [6, "id7"], [6, "id9"]], "Hat IDs": [[6, "hat-ids"]], "Trigger modes": [[6, "trigger-modes"]], "Scan / read option flags": [[6, "scan-read-option-flags"]], "HatError class": [[6, "haterror-class"]], "MCC 118 class": [[6, "mcc-118-class"]], "MCC 128 class": [[6, "mcc-128-class"]], "Analog input modes": [[6, "analog-input-modes"]], "Analog input ranges": [[6, "analog-input-ranges"]], "MCC 134 class": [[6, "mcc-134-class"]], "Thermocouple types": [[6, "thermocouple-types"]], "MCC 152 class": [[6, "mcc-152-class"]], "MCC 172 class": [[6, "mcc-172-class"]], "Source types": [[6, "source-types"]], "Python Test Function Reference": [[7, "python-test-function-reference"]], "MCC 118 test methods": [[7, "mcc-118-test-methods"]], "MCC 128 test methods": [[7, "mcc-128-test-methods"]], "MCC 172 test methods": [[7, "mcc-172-test-methods"]]}, "indexentries": {"analoginputmode (c enum)": [[0, "c.AnalogInputMode"]], "analoginputmode.a_in_mode_diff (c enumerator)": [[0, "c.AnalogInputMode.A_IN_MODE_DIFF"]], "analoginputmode.a_in_mode_se (c enumerator)": [[0, "c.AnalogInputMode.A_IN_MODE_SE"]], "analoginputrange (c enum)": [[0, "c.AnalogInputRange"]], "analoginputrange.a_in_range_bip_10v (c enumerator)": [[0, "c.AnalogInputRange.A_IN_RANGE_BIP_10V"]], "analoginputrange.a_in_range_bip_1v (c enumerator)": [[0, "c.AnalogInputRange.A_IN_RANGE_BIP_1V"]], "analoginputrange.a_in_range_bip_2v (c enumerator)": [[0, "c.AnalogInputRange.A_IN_RANGE_BIP_2V"]], "analoginputrange.a_in_range_bip_5v (c enumerator)": [[0, "c.AnalogInputRange.A_IN_RANGE_BIP_5V"]], "common_mode_tc_value (c macro)": [[0, "c.COMMON_MODE_TC_VALUE"]], "dioconfigitem (c enum)": [[0, "c.DIOConfigItem"]], "dioconfigitem.dio_direction (c enumerator)": [[0, "c.DIOConfigItem.DIO_DIRECTION"]], "dioconfigitem.dio_input_invert (c enumerator)": [[0, "c.DIOConfigItem.DIO_INPUT_INVERT"]], "dioconfigitem.dio_input_latch (c enumerator)": [[0, "c.DIOConfigItem.DIO_INPUT_LATCH"]], "dioconfigitem.dio_int_mask (c enumerator)": [[0, "c.DIOConfigItem.DIO_INT_MASK"]], "dioconfigitem.dio_output_type (c enumerator)": [[0, "c.DIOConfigItem.DIO_OUTPUT_TYPE"]], "dioconfigitem.dio_pull_config (c enumerator)": [[0, "c.DIOConfigItem.DIO_PULL_CONFIG"]], "dioconfigitem.dio_pull_enable (c enumerator)": [[0, "c.DIOConfigItem.DIO_PULL_ENABLE"]], "hatids (c enum)": [[0, "c.HatIDs"]], "hatids.hat_id_any (c enumerator)": [[0, "c.HatIDs.HAT_ID_ANY"]], "hatids.hat_id_mcc_118 (c enumerator)": [[0, "c.HatIDs.HAT_ID_MCC_118"]], "hatids.hat_id_mcc_118_bootloader (c enumerator)": [[0, "c.HatIDs.HAT_ID_MCC_118_BOOTLOADER"]], "hatids.hat_id_mcc_128 (c enumerator)": [[0, "c.HatIDs.HAT_ID_MCC_128"]], "hatids.hat_id_mcc_134 (c enumerator)": [[0, "c.HatIDs.HAT_ID_MCC_134"]], "hatids.hat_id_mcc_152 (c enumerator)": [[0, "c.HatIDs.HAT_ID_MCC_152"]], "hatids.hat_id_mcc_172 (c enumerator)": [[0, "c.HatIDs.HAT_ID_MCC_172"]], "hatinfo (c struct)": [[0, "c.HatInfo"]], "hatinfo.address (c var)": [[0, "c.HatInfo.address"]], "hatinfo.id (c var)": [[0, "c.HatInfo.id"]], "hatinfo.product_name (c var)": [[0, "c.HatInfo.product_name"]], "hatinfo.version (c var)": [[0, "c.HatInfo.version"]], "max_number_hats (c macro)": [[0, "c.MAX_NUMBER_HATS"]], "mcc118deviceinfo (c struct)": [[0, "c.MCC118DeviceInfo"]], "mcc118deviceinfo.ai_max_code (c var)": [[0, "c.MCC118DeviceInfo.AI_MAX_CODE"]], "mcc118deviceinfo.ai_max_range (c var)": [[0, "c.MCC118DeviceInfo.AI_MAX_RANGE"]], "mcc118deviceinfo.ai_max_voltage (c var)": [[0, "c.MCC118DeviceInfo.AI_MAX_VOLTAGE"]], "mcc118deviceinfo.ai_min_code (c var)": [[0, "c.MCC118DeviceInfo.AI_MIN_CODE"]], "mcc118deviceinfo.ai_min_range (c var)": [[0, "c.MCC118DeviceInfo.AI_MIN_RANGE"]], "mcc118deviceinfo.ai_min_voltage (c var)": [[0, "c.MCC118DeviceInfo.AI_MIN_VOLTAGE"]], "mcc118deviceinfo.num_ai_channels (c var)": [[0, "c.MCC118DeviceInfo.NUM_AI_CHANNELS"]], "mcc128deviceinfo (c struct)": [[0, "c.MCC128DeviceInfo"]], "mcc128deviceinfo.ai_max_code (c var)": [[0, "c.MCC128DeviceInfo.AI_MAX_CODE"]], "mcc128deviceinfo.ai_max_range (c var)": [[0, "c.MCC128DeviceInfo.AI_MAX_RANGE"]], "mcc128deviceinfo.ai_max_voltage (c var)": [[0, "c.MCC128DeviceInfo.AI_MAX_VOLTAGE"]], "mcc128deviceinfo.ai_min_code (c var)": [[0, "c.MCC128DeviceInfo.AI_MIN_CODE"]], "mcc128deviceinfo.ai_min_range (c var)": [[0, "c.MCC128DeviceInfo.AI_MIN_RANGE"]], "mcc128deviceinfo.ai_min_voltage (c var)": [[0, "c.MCC128DeviceInfo.AI_MIN_VOLTAGE"]], "mcc128deviceinfo.num_ai_channels (c var)": [[0, "c.MCC128DeviceInfo.NUM_AI_CHANNELS"]], "mcc128deviceinfo.num_ai_modes (c var)": [[0, "c.MCC128DeviceInfo.NUM_AI_MODES"]], "mcc128deviceinfo.num_ai_ranges (c var)": [[0, "c.MCC128DeviceInfo.NUM_AI_RANGES"]], "mcc134deviceinfo (c struct)": [[0, "c.MCC134DeviceInfo"]], "mcc134deviceinfo.ai_max_code (c var)": [[0, "c.MCC134DeviceInfo.AI_MAX_CODE"]], "mcc134deviceinfo.ai_max_range (c var)": [[0, "c.MCC134DeviceInfo.AI_MAX_RANGE"]], "mcc134deviceinfo.ai_max_voltage (c var)": [[0, "c.MCC134DeviceInfo.AI_MAX_VOLTAGE"]], "mcc134deviceinfo.ai_min_code (c var)": [[0, "c.MCC134DeviceInfo.AI_MIN_CODE"]], "mcc134deviceinfo.ai_min_range (c var)": [[0, "c.MCC134DeviceInfo.AI_MIN_RANGE"]], "mcc134deviceinfo.ai_min_voltage (c var)": [[0, "c.MCC134DeviceInfo.AI_MIN_VOLTAGE"]], "mcc134deviceinfo.num_ai_channels (c var)": [[0, "c.MCC134DeviceInfo.NUM_AI_CHANNELS"]], "mcc152deviceinfo (c struct)": [[0, "c.MCC152DeviceInfo"]], "mcc152deviceinfo.ao_max_code (c var)": [[0, "c.MCC152DeviceInfo.AO_MAX_CODE"]], "mcc152deviceinfo.ao_max_range (c var)": [[0, "c.MCC152DeviceInfo.AO_MAX_RANGE"]], "mcc152deviceinfo.ao_max_voltage (c var)": [[0, "c.MCC152DeviceInfo.AO_MAX_VOLTAGE"]], "mcc152deviceinfo.ao_min_code (c var)": [[0, "c.MCC152DeviceInfo.AO_MIN_CODE"]], "mcc152deviceinfo.ao_min_range (c var)": [[0, "c.MCC152DeviceInfo.AO_MIN_RANGE"]], "mcc152deviceinfo.ao_min_voltage (c var)": [[0, "c.MCC152DeviceInfo.AO_MIN_VOLTAGE"]], "mcc152deviceinfo.num_ao_channels (c var)": [[0, "c.MCC152DeviceInfo.NUM_AO_CHANNELS"]], "mcc152deviceinfo.num_dio_channels (c var)": [[0, "c.MCC152DeviceInfo.NUM_DIO_CHANNELS"]], "mcc172deviceinfo (c struct)": [[0, "c.MCC172DeviceInfo"]], "mcc172deviceinfo.ai_max_code (c var)": [[0, "c.MCC172DeviceInfo.AI_MAX_CODE"]], "mcc172deviceinfo.ai_max_range (c var)": [[0, "c.MCC172DeviceInfo.AI_MAX_RANGE"]], "mcc172deviceinfo.ai_max_voltage (c var)": [[0, "c.MCC172DeviceInfo.AI_MAX_VOLTAGE"]], "mcc172deviceinfo.ai_min_code (c var)": [[0, "c.MCC172DeviceInfo.AI_MIN_CODE"]], "mcc172deviceinfo.ai_min_range (c var)": [[0, "c.MCC172DeviceInfo.AI_MIN_RANGE"]], "mcc172deviceinfo.ai_min_voltage (c var)": [[0, "c.MCC172DeviceInfo.AI_MIN_VOLTAGE"]], "mcc172deviceinfo.num_ai_channels (c var)": [[0, "c.MCC172DeviceInfo.NUM_AI_CHANNELS"]], "open_tc_value (c macro)": [[0, "c.OPEN_TC_VALUE"]], "opts_continuous (c macro)": [[0, "c.OPTS_CONTINUOUS"]], "opts_default (c macro)": [[0, "c.OPTS_DEFAULT"]], "opts_extclock (c macro)": [[0, "c.OPTS_EXTCLOCK"]], "opts_exttrigger (c macro)": [[0, "c.OPTS_EXTTRIGGER"]], "opts_nocalibratedata (c macro)": [[0, "c.OPTS_NOCALIBRATEDATA"]], "opts_noscaledata (c macro)": [[0, "c.OPTS_NOSCALEDATA"]], "overrange_tc_value (c macro)": [[0, "c.OVERRANGE_TC_VALUE"]], "resultcode (c enum)": [[0, "c.ResultCode"]], "resultcode.result_bad_parameter (c enumerator)": [[0, "c.ResultCode.RESULT_BAD_PARAMETER"]], "resultcode.result_busy (c enumerator)": [[0, "c.ResultCode.RESULT_BUSY"]], "resultcode.result_comms_failure (c enumerator)": [[0, "c.ResultCode.RESULT_COMMS_FAILURE"]], "resultcode.result_invalid_device (c enumerator)": [[0, "c.ResultCode.RESULT_INVALID_DEVICE"]], "resultcode.result_lock_timeout (c enumerator)": [[0, "c.ResultCode.RESULT_LOCK_TIMEOUT"]], "resultcode.result_resource_unavail (c enumerator)": [[0, "c.ResultCode.RESULT_RESOURCE_UNAVAIL"]], "resultcode.result_success (c enumerator)": [[0, "c.ResultCode.RESULT_SUCCESS"]], "resultcode.result_timeout (c enumerator)": [[0, "c.ResultCode.RESULT_TIMEOUT"]], "resultcode.result_undefined (c enumerator)": [[0, "c.ResultCode.RESULT_UNDEFINED"]], "status_buffer_overrun (c macro)": [[0, "c.STATUS_BUFFER_OVERRUN"]], "status_hw_overrun (c macro)": [[0, "c.STATUS_HW_OVERRUN"]], "status_running (c macro)": [[0, "c.STATUS_RUNNING"]], "status_triggered (c macro)": [[0, "c.STATUS_TRIGGERED"]], "sourcetype (c enum)": [[0, "c.SourceType"]], "sourcetype.source_local (c enumerator)": [[0, "c.SourceType.SOURCE_LOCAL"]], "sourcetype.source_master (c enumerator)": [[0, "c.SourceType.SOURCE_MASTER"]], "sourcetype.source_slave (c enumerator)": [[0, "c.SourceType.SOURCE_SLAVE"]], "tctypes (c enum)": [[0, "c.TcTypes"]], "tctypes.tc_disabled (c enumerator)": [[0, "c.TcTypes.TC_DISABLED"]], "tctypes.tc_type_b (c enumerator)": [[0, "c.TcTypes.TC_TYPE_B"]], "tctypes.tc_type_e (c enumerator)": [[0, "c.TcTypes.TC_TYPE_E"]], "tctypes.tc_type_j (c enumerator)": [[0, "c.TcTypes.TC_TYPE_J"]], "tctypes.tc_type_k (c enumerator)": [[0, "c.TcTypes.TC_TYPE_K"]], "tctypes.tc_type_n (c enumerator)": [[0, "c.TcTypes.TC_TYPE_N"]], "tctypes.tc_type_r (c enumerator)": [[0, "c.TcTypes.TC_TYPE_R"]], "tctypes.tc_type_s (c enumerator)": [[0, "c.TcTypes.TC_TYPE_S"]], "tctypes.tc_type_t (c enumerator)": [[0, "c.TcTypes.TC_TYPE_T"]], "triggermode (c enum)": [[0, "c.TriggerMode"]], "triggermode.trig_active_high (c enumerator)": [[0, "c.TriggerMode.TRIG_ACTIVE_HIGH"]], "triggermode.trig_active_low (c enumerator)": [[0, "c.TriggerMode.TRIG_ACTIVE_LOW"]], "triggermode.trig_falling_edge (c enumerator)": [[0, "c.TriggerMode.TRIG_FALLING_EDGE"]], "triggermode.trig_rising_edge (c enumerator)": [[0, "c.TriggerMode.TRIG_RISING_EDGE"]], "hat_error_message (c function)": [[0, "c.hat_error_message"]], "hat_interrupt_callback_disable (c function)": [[0, "c.hat_interrupt_callback_disable"]], "hat_interrupt_callback_enable (c function)": [[0, "c.hat_interrupt_callback_enable"]], "hat_interrupt_state (c function)": [[0, "c.hat_interrupt_state"]], "hat_list (c function)": [[0, "c.hat_list"]], "hat_wait_for_interrupt (c function)": [[0, "c.hat_wait_for_interrupt"]], "mcc118_a_in_read (c function)": [[0, "c.mcc118_a_in_read"]], "mcc118_a_in_scan_actual_rate (c function)": [[0, "c.mcc118_a_in_scan_actual_rate"]], "mcc118_a_in_scan_buffer_size (c function)": [[0, "c.mcc118_a_in_scan_buffer_size"]], "mcc118_a_in_scan_channel_count (c function)": [[0, "c.mcc118_a_in_scan_channel_count"]], "mcc118_a_in_scan_cleanup (c function)": [[0, "c.mcc118_a_in_scan_cleanup"]], "mcc118_a_in_scan_read (c function)": [[0, "c.mcc118_a_in_scan_read"]], "mcc118_a_in_scan_start (c function)": [[0, "c.mcc118_a_in_scan_start"]], "mcc118_a_in_scan_status (c function)": [[0, "c.mcc118_a_in_scan_status"]], "mcc118_a_in_scan_stop (c function)": [[0, "c.mcc118_a_in_scan_stop"]], "mcc118_blink_led (c function)": [[0, "c.mcc118_blink_led"]], "mcc118_calibration_coefficient_read (c function)": [[0, "c.mcc118_calibration_coefficient_read"]], "mcc118_calibration_coefficient_write (c function)": [[0, "c.mcc118_calibration_coefficient_write"]], "mcc118_calibration_date (c function)": [[0, "c.mcc118_calibration_date"]], "mcc118_close (c function)": [[0, "c.mcc118_close"]], "mcc118_firmware_version (c function)": [[0, "c.mcc118_firmware_version"]], "mcc118_info (c function)": [[0, "c.mcc118_info"]], "mcc118_is_open (c function)": [[0, "c.mcc118_is_open"]], "mcc118_open (c function)": [[0, "c.mcc118_open"]], "mcc118_serial (c function)": [[0, "c.mcc118_serial"]], "mcc118_trigger_mode (c function)": [[0, "c.mcc118_trigger_mode"]], "mcc128_a_in_mode_read (c function)": [[0, "c.mcc128_a_in_mode_read"]], "mcc128_a_in_mode_write (c function)": [[0, "c.mcc128_a_in_mode_write"]], "mcc128_a_in_range_read (c function)": [[0, "c.mcc128_a_in_range_read"]], "mcc128_a_in_range_write (c function)": [[0, "c.mcc128_a_in_range_write"]], "mcc128_a_in_read (c function)": [[0, "c.mcc128_a_in_read"]], "mcc128_a_in_scan_actual_rate (c function)": [[0, "c.mcc128_a_in_scan_actual_rate"]], "mcc128_a_in_scan_buffer_size (c function)": [[0, "c.mcc128_a_in_scan_buffer_size"]], "mcc128_a_in_scan_channel_count (c function)": [[0, "c.mcc128_a_in_scan_channel_count"]], "mcc128_a_in_scan_cleanup (c function)": [[0, "c.mcc128_a_in_scan_cleanup"]], "mcc128_a_in_scan_read (c function)": [[0, "c.mcc128_a_in_scan_read"]], "mcc128_a_in_scan_start (c function)": [[0, "c.mcc128_a_in_scan_start"]], "mcc128_a_in_scan_status (c function)": [[0, "c.mcc128_a_in_scan_status"]], "mcc128_a_in_scan_stop (c function)": [[0, "c.mcc128_a_in_scan_stop"]], "mcc128_blink_led (c function)": [[0, "c.mcc128_blink_led"]], "mcc128_calibration_coefficient_read (c function)": [[0, "c.mcc128_calibration_coefficient_read"]], "mcc128_calibration_coefficient_write (c function)": [[0, "c.mcc128_calibration_coefficient_write"]], "mcc128_calibration_date (c function)": [[0, "c.mcc128_calibration_date"]], "mcc128_close (c function)": [[0, "c.mcc128_close"]], "mcc128_firmware_version (c function)": [[0, "c.mcc128_firmware_version"]], "mcc128_info (c function)": [[0, "c.mcc128_info"]], "mcc128_is_open (c function)": [[0, "c.mcc128_is_open"]], "mcc128_open (c function)": [[0, "c.mcc128_open"]], "mcc128_serial (c function)": [[0, "c.mcc128_serial"]], "mcc128_trigger_mode (c function)": [[0, "c.mcc128_trigger_mode"]], "mcc134_a_in_read (c function)": [[0, "c.mcc134_a_in_read"]], "mcc134_calibration_coefficient_read (c function)": [[0, "c.mcc134_calibration_coefficient_read"]], "mcc134_calibration_coefficient_write (c function)": [[0, "c.mcc134_calibration_coefficient_write"]], "mcc134_calibration_date (c function)": [[0, "c.mcc134_calibration_date"]], "mcc134_cjc_read (c function)": [[0, "c.mcc134_cjc_read"]], "mcc134_close (c function)": [[0, "c.mcc134_close"]], "mcc134_info (c function)": [[0, "c.mcc134_info"]], "mcc134_is_open (c function)": [[0, "c.mcc134_is_open"]], "mcc134_open (c function)": [[0, "c.mcc134_open"]], "mcc134_serial (c function)": [[0, "c.mcc134_serial"]], "mcc134_t_in_read (c function)": [[0, "c.mcc134_t_in_read"]], "mcc134_tc_type_read (c function)": [[0, "c.mcc134_tc_type_read"]], "mcc134_tc_type_write (c function)": [[0, "c.mcc134_tc_type_write"]], "mcc134_update_interval_read (c function)": [[0, "c.mcc134_update_interval_read"]], "mcc134_update_interval_write (c function)": [[0, "c.mcc134_update_interval_write"]], "mcc152_a_out_write (c function)": [[0, "c.mcc152_a_out_write"]], "mcc152_a_out_write_all (c function)": [[0, "c.mcc152_a_out_write_all"]], "mcc152_close (c function)": [[0, "c.mcc152_close"]], "mcc152_dio_config_read_bit (c function)": [[0, "c.mcc152_dio_config_read_bit"]], "mcc152_dio_config_read_port (c function)": [[0, "c.mcc152_dio_config_read_port"]], "mcc152_dio_config_write_bit (c function)": [[0, "c.mcc152_dio_config_write_bit"]], "mcc152_dio_config_write_port (c function)": [[0, "c.mcc152_dio_config_write_port"]], "mcc152_dio_input_read_bit (c function)": [[0, "c.mcc152_dio_input_read_bit"]], "mcc152_dio_input_read_port (c function)": [[0, "c.mcc152_dio_input_read_port"]], "mcc152_dio_int_status_read_bit (c function)": [[0, "c.mcc152_dio_int_status_read_bit"]], "mcc152_dio_int_status_read_port (c function)": [[0, "c.mcc152_dio_int_status_read_port"]], "mcc152_dio_output_read_bit (c function)": [[0, "c.mcc152_dio_output_read_bit"]], "mcc152_dio_output_read_port (c function)": [[0, "c.mcc152_dio_output_read_port"]], "mcc152_dio_output_write_bit (c function)": [[0, "c.mcc152_dio_output_write_bit"]], "mcc152_dio_output_write_port (c function)": [[0, "c.mcc152_dio_output_write_port"]], "mcc152_dio_reset (c function)": [[0, "c.mcc152_dio_reset"]], "mcc152_info (c function)": [[0, "c.mcc152_info"]], "mcc152_is_open (c function)": [[0, "c.mcc152_is_open"]], "mcc152_open (c function)": [[0, "c.mcc152_open"]], "mcc152_serial (c function)": [[0, "c.mcc152_serial"]], "mcc172_a_in_clock_config_read (c function)": [[0, "c.mcc172_a_in_clock_config_read"]], "mcc172_a_in_clock_config_write (c function)": [[0, "c.mcc172_a_in_clock_config_write"]], "mcc172_a_in_scan_buffer_size (c function)": [[0, "c.mcc172_a_in_scan_buffer_size"]], "mcc172_a_in_scan_channel_count (c function)": [[0, "c.mcc172_a_in_scan_channel_count"]], "mcc172_a_in_scan_cleanup (c function)": [[0, "c.mcc172_a_in_scan_cleanup"]], "mcc172_a_in_scan_read (c function)": [[0, "c.mcc172_a_in_scan_read"]], "mcc172_a_in_scan_start (c function)": [[0, "c.mcc172_a_in_scan_start"]], "mcc172_a_in_scan_status (c function)": [[0, "c.mcc172_a_in_scan_status"]], "mcc172_a_in_scan_stop (c function)": [[0, "c.mcc172_a_in_scan_stop"]], "mcc172_a_in_sensitivity_read (c function)": [[0, "c.mcc172_a_in_sensitivity_read"]], "mcc172_a_in_sensitivity_write (c function)": [[0, "c.mcc172_a_in_sensitivity_write"]], "mcc172_blink_led (c function)": [[0, "c.mcc172_blink_led"]], "mcc172_calibration_coefficient_read (c function)": [[0, "c.mcc172_calibration_coefficient_read"]], "mcc172_calibration_coefficient_write (c function)": [[0, "c.mcc172_calibration_coefficient_write"]], "mcc172_calibration_date (c function)": [[0, "c.mcc172_calibration_date"]], "mcc172_close (c function)": [[0, "c.mcc172_close"]], "mcc172_firmware_version (c function)": [[0, "c.mcc172_firmware_version"]], "mcc172_iepe_config_read (c function)": [[0, "c.mcc172_iepe_config_read"]], "mcc172_iepe_config_write (c function)": [[0, "c.mcc172_iepe_config_write"]], "mcc172_info (c function)": [[0, "c.mcc172_info"]], "mcc172_is_open (c function)": [[0, "c.mcc172_is_open"]], "mcc172_open (c function)": [[0, "c.mcc172_open"]], "mcc172_serial (c function)": [[0, "c.mcc172_serial"]], "mcc172_trigger_config (c function)": [[0, "c.mcc172_trigger_config"]], "mcc118_test_clock (c function)": [[1, "c.mcc118_test_clock"]], "mcc118_test_trigger (c function)": [[1, "c.mcc118_test_trigger"]], "mcc172_test_signals_read (c function)": [[1, "c.mcc172_test_signals_read"]], "mcc172_test_signals_write (c function)": [[1, "c.mcc172_test_signals_write"]], "active_high (daqhats.triggermodes attribute)": [[6, "daqhats.TriggerModes.ACTIVE_HIGH"]], "active_low (daqhats.triggermodes attribute)": [[6, "daqhats.TriggerModes.ACTIVE_LOW"]], "any (daqhats.hatids attribute)": [[6, "daqhats.HatIDs.ANY"]], "analoginputmode (class in daqhats)": [[6, "daqhats.AnalogInputMode"]], "analoginputrange (class in daqhats)": [[6, "daqhats.AnalogInputRange"]], "bip_10v (daqhats.analoginputrange attribute)": [[6, "daqhats.AnalogInputRange.BIP_10V"]], "bip_1v (daqhats.analoginputrange attribute)": [[6, "daqhats.AnalogInputRange.BIP_1V"]], "bip_2v (daqhats.analoginputrange attribute)": [[6, "daqhats.AnalogInputRange.BIP_2V"]], "bip_5v (daqhats.analoginputrange attribute)": [[6, "daqhats.AnalogInputRange.BIP_5V"]], "common_mode_tc_value (daqhats.mcc134 attribute)": [[6, "daqhats.mcc134.COMMON_MODE_TC_VALUE"]], "continuous (daqhats.optionflags attribute)": [[6, "daqhats.OptionFlags.CONTINUOUS"]], "default (daqhats.optionflags attribute)": [[6, "daqhats.OptionFlags.DEFAULT"]], "diff (daqhats.analoginputmode attribute)": [[6, "daqhats.AnalogInputMode.DIFF"]], "dioconfigitem (class in daqhats)": [[6, "daqhats.DIOConfigItem"]], "direction (daqhats.dioconfigitem attribute)": [[6, "daqhats.DIOConfigItem.DIRECTION"]], "disabled (daqhats.tctypes attribute)": [[6, "daqhats.TcTypes.DISABLED"]], "extclock (daqhats.optionflags attribute)": [[6, "daqhats.OptionFlags.EXTCLOCK"]], "exttrigger (daqhats.optionflags attribute)": [[6, "daqhats.OptionFlags.EXTTRIGGER"]], "falling_edge (daqhats.triggermodes attribute)": [[6, "daqhats.TriggerModes.FALLING_EDGE"]], "haterror": [[6, "daqhats.HatError"]], "hatids (class in daqhats)": [[6, "daqhats.HatIDs"]], "input_invert (daqhats.dioconfigitem attribute)": [[6, "daqhats.DIOConfigItem.INPUT_INVERT"]], "input_latch (daqhats.dioconfigitem attribute)": [[6, "daqhats.DIOConfigItem.INPUT_LATCH"]], "int_mask (daqhats.dioconfigitem attribute)": [[6, "daqhats.DIOConfigItem.INT_MASK"]], "local (daqhats.sourcetype attribute)": [[6, "daqhats.SourceType.LOCAL"]], "master (daqhats.sourcetype attribute)": [[6, "daqhats.SourceType.MASTER"]], "mcc_118 (daqhats.hatids attribute)": [[6, "daqhats.HatIDs.MCC_118"]], "mcc_128 (daqhats.hatids attribute)": [[6, "daqhats.HatIDs.MCC_128"]], "mcc_134 (daqhats.hatids attribute)": [[6, "daqhats.HatIDs.MCC_134"]], "mcc_152 (daqhats.hatids attribute)": [[6, "daqhats.HatIDs.MCC_152"]], "mcc_172 (daqhats.hatids attribute)": [[6, "daqhats.HatIDs.MCC_172"]], "nocalibratedata (daqhats.optionflags attribute)": [[6, "daqhats.OptionFlags.NOCALIBRATEDATA"]], "noscaledata (daqhats.optionflags attribute)": [[6, "daqhats.OptionFlags.NOSCALEDATA"]], "open_tc_value (daqhats.mcc134 attribute)": [[6, "daqhats.mcc134.OPEN_TC_VALUE"]], "output_type (daqhats.dioconfigitem attribute)": [[6, "daqhats.DIOConfigItem.OUTPUT_TYPE"]], "overrange_tc_value (daqhats.mcc134 attribute)": [[6, "daqhats.mcc134.OVERRANGE_TC_VALUE"]], "optionflags (class in daqhats)": [[6, "daqhats.OptionFlags"]], "pull_config (daqhats.dioconfigitem attribute)": [[6, "daqhats.DIOConfigItem.PULL_CONFIG"]], "pull_enable (daqhats.dioconfigitem attribute)": [[6, "daqhats.DIOConfigItem.PULL_ENABLE"]], "rising_edge (daqhats.triggermodes attribute)": [[6, "daqhats.TriggerModes.RISING_EDGE"]], "se (daqhats.analoginputmode attribute)": [[6, "daqhats.AnalogInputMode.SE"]], "slave (daqhats.sourcetype attribute)": [[6, "daqhats.SourceType.SLAVE"]], "sourcetype (class in daqhats)": [[6, "daqhats.SourceType"]], "temperature (daqhats.optionflags attribute)": [[6, "daqhats.OptionFlags.TEMPERATURE"]], "type_b (daqhats.tctypes attribute)": [[6, "daqhats.TcTypes.TYPE_B"]], "type_e (daqhats.tctypes attribute)": [[6, "daqhats.TcTypes.TYPE_E"]], "type_j (daqhats.tctypes attribute)": [[6, "daqhats.TcTypes.TYPE_J"]], "type_k (daqhats.tctypes attribute)": [[6, "daqhats.TcTypes.TYPE_K"]], "type_n (daqhats.tctypes attribute)": [[6, "daqhats.TcTypes.TYPE_N"]], "type_r (daqhats.tctypes attribute)": [[6, "daqhats.TcTypes.TYPE_R"]], "type_s (daqhats.tctypes attribute)": [[6, "daqhats.TcTypes.TYPE_S"]], "type_t (daqhats.tctypes attribute)": [[6, "daqhats.TcTypes.TYPE_T"]], "tctypes (class in daqhats)": [[6, "daqhats.TcTypes"]], "triggermodes (class in daqhats)": [[6, "daqhats.TriggerModes"]], "a_in_clock_config_read() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.a_in_clock_config_read"]], "a_in_clock_config_write() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.a_in_clock_config_write"]], "a_in_mode_read() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.a_in_mode_read"]], "a_in_mode_write() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.a_in_mode_write"]], "a_in_range_read() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.a_in_range_read"]], "a_in_range_write() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.a_in_range_write"]], "a_in_read() (daqhats.mcc118 method)": [[6, "daqhats.mcc118.a_in_read"]], "a_in_read() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.a_in_read"]], "a_in_read() (daqhats.mcc134 method)": [[6, "daqhats.mcc134.a_in_read"]], "a_in_scan_actual_rate() (daqhats.mcc118 method)": [[6, "daqhats.mcc118.a_in_scan_actual_rate"]], "a_in_scan_actual_rate() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.a_in_scan_actual_rate"]], "a_in_scan_actual_rate() (daqhats.mcc172 static method)": [[6, "daqhats.mcc172.a_in_scan_actual_rate"]], "a_in_scan_buffer_size() (daqhats.mcc118 method)": [[6, "daqhats.mcc118.a_in_scan_buffer_size"]], "a_in_scan_buffer_size() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.a_in_scan_buffer_size"]], "a_in_scan_buffer_size() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.a_in_scan_buffer_size"]], "a_in_scan_channel_count() (daqhats.mcc118 method)": [[6, "daqhats.mcc118.a_in_scan_channel_count"]], "a_in_scan_channel_count() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.a_in_scan_channel_count"]], "a_in_scan_channel_count() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.a_in_scan_channel_count"]], "a_in_scan_cleanup() (daqhats.mcc118 method)": [[6, "daqhats.mcc118.a_in_scan_cleanup"]], "a_in_scan_cleanup() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.a_in_scan_cleanup"]], "a_in_scan_cleanup() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.a_in_scan_cleanup"]], "a_in_scan_read() (daqhats.mcc118 method)": [[6, "daqhats.mcc118.a_in_scan_read"]], "a_in_scan_read() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.a_in_scan_read"]], "a_in_scan_read() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.a_in_scan_read"]], "a_in_scan_read_numpy() (daqhats.mcc118 method)": [[6, "daqhats.mcc118.a_in_scan_read_numpy"]], "a_in_scan_read_numpy() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.a_in_scan_read_numpy"]], "a_in_scan_read_numpy() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.a_in_scan_read_numpy"]], "a_in_scan_start() (daqhats.mcc118 method)": [[6, "daqhats.mcc118.a_in_scan_start"]], "a_in_scan_start() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.a_in_scan_start"]], "a_in_scan_start() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.a_in_scan_start"]], "a_in_scan_status() (daqhats.mcc118 method)": [[6, "daqhats.mcc118.a_in_scan_status"]], "a_in_scan_status() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.a_in_scan_status"]], "a_in_scan_status() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.a_in_scan_status"]], "a_in_scan_stop() (daqhats.mcc118 method)": [[6, "daqhats.mcc118.a_in_scan_stop"]], "a_in_scan_stop() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.a_in_scan_stop"]], "a_in_scan_stop() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.a_in_scan_stop"]], "a_in_sensitivity_read() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.a_in_sensitivity_read"]], "a_in_sensitivity_write() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.a_in_sensitivity_write"]], "a_out_write() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.a_out_write"]], "a_out_write_all() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.a_out_write_all"]], "address() (daqhats.mcc118 method)": [[6, "daqhats.mcc118.address"]], "address() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.address"]], "address() (daqhats.mcc134 method)": [[6, "daqhats.mcc134.address"]], "address() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.address"]], "address() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.address"]], "blink_led() (daqhats.mcc118 method)": [[6, "daqhats.mcc118.blink_led"]], "blink_led() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.blink_led"]], "blink_led() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.blink_led"]], "calibration_coefficient_read() (daqhats.mcc118 method)": [[6, "daqhats.mcc118.calibration_coefficient_read"]], "calibration_coefficient_read() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.calibration_coefficient_read"]], "calibration_coefficient_read() (daqhats.mcc134 method)": [[6, "daqhats.mcc134.calibration_coefficient_read"]], "calibration_coefficient_read() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.calibration_coefficient_read"]], "calibration_coefficient_write() (daqhats.mcc118 method)": [[6, "daqhats.mcc118.calibration_coefficient_write"]], "calibration_coefficient_write() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.calibration_coefficient_write"]], "calibration_coefficient_write() (daqhats.mcc134 method)": [[6, "daqhats.mcc134.calibration_coefficient_write"]], "calibration_coefficient_write() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.calibration_coefficient_write"]], "calibration_date() (daqhats.mcc118 method)": [[6, "daqhats.mcc118.calibration_date"]], "calibration_date() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.calibration_date"]], "calibration_date() (daqhats.mcc134 method)": [[6, "daqhats.mcc134.calibration_date"]], "calibration_date() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.calibration_date"]], "cjc_read() (daqhats.mcc134 method)": [[6, "daqhats.mcc134.cjc_read"]], "dio_config_read_bit() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_config_read_bit"]], "dio_config_read_port() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_config_read_port"]], "dio_config_read_tuple() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_config_read_tuple"]], "dio_config_write_bit() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_config_write_bit"]], "dio_config_write_dict() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_config_write_dict"]], "dio_config_write_port() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_config_write_port"]], "dio_input_read_bit() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_input_read_bit"]], "dio_input_read_port() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_input_read_port"]], "dio_input_read_tuple() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_input_read_tuple"]], "dio_int_status_read_bit() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_int_status_read_bit"]], "dio_int_status_read_port() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_int_status_read_port"]], "dio_int_status_read_tuple() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_int_status_read_tuple"]], "dio_output_read_bit() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_output_read_bit"]], "dio_output_read_port() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_output_read_port"]], "dio_output_read_tuple() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_output_read_tuple"]], "dio_output_write_bit() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_output_write_bit"]], "dio_output_write_dict() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_output_write_dict"]], "dio_output_write_port() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_output_write_port"]], "dio_reset() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.dio_reset"]], "firmware_version() (daqhats.mcc118 method)": [[6, "daqhats.mcc118.firmware_version"]], "firmware_version() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.firmware_version"]], "firmware_version() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.firmware_version"]], "hat_list() (in module daqhats)": [[6, "daqhats.hat_list"]], "iepe_config_read() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.iepe_config_read"]], "iepe_config_write() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.iepe_config_write"]], "info() (daqhats.mcc118 static method)": [[6, "daqhats.mcc118.info"]], "info() (daqhats.mcc128 static method)": [[6, "daqhats.mcc128.info"]], "info() (daqhats.mcc134 static method)": [[6, "daqhats.mcc134.info"]], "info() (daqhats.mcc152 static method)": [[6, "daqhats.mcc152.info"]], "info() (daqhats.mcc172 static method)": [[6, "daqhats.mcc172.info"]], "interrupt_callback_disable() (in module daqhats)": [[6, "daqhats.interrupt_callback_disable"]], "interrupt_callback_enable() (in module daqhats)": [[6, "daqhats.interrupt_callback_enable"]], "interrupt_state() (in module daqhats)": [[6, "daqhats.interrupt_state"]], "mcc118 (class in daqhats)": [[6, "daqhats.mcc118"]], "mcc128 (class in daqhats)": [[6, "daqhats.mcc128"]], "mcc134 (class in daqhats)": [[6, "daqhats.mcc134"]], "mcc152 (class in daqhats)": [[6, "daqhats.mcc152"]], "mcc172 (class in daqhats)": [[6, "daqhats.mcc172"]], "serial() (daqhats.mcc118 method)": [[6, "daqhats.mcc118.serial"]], "serial() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.serial"]], "serial() (daqhats.mcc134 method)": [[6, "daqhats.mcc134.serial"]], "serial() (daqhats.mcc152 method)": [[6, "daqhats.mcc152.serial"]], "serial() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.serial"]], "t_in_read() (daqhats.mcc134 method)": [[6, "daqhats.mcc134.t_in_read"]], "tc_type_read() (daqhats.mcc134 method)": [[6, "daqhats.mcc134.tc_type_read"]], "tc_type_write() (daqhats.mcc134 method)": [[6, "daqhats.mcc134.tc_type_write"]], "trigger_config() (daqhats.mcc172 method)": [[6, "daqhats.mcc172.trigger_config"]], "trigger_mode() (daqhats.mcc118 method)": [[6, "daqhats.mcc118.trigger_mode"]], "trigger_mode() (daqhats.mcc128 method)": [[6, "daqhats.mcc128.trigger_mode"]], "update_interval_read() (daqhats.mcc134 method)": [[6, "daqhats.mcc134.update_interval_read"]], "update_interval_write() (daqhats.mcc134 method)": [[6, "daqhats.mcc134.update_interval_write"]], "wait_for_interrupt() (in module daqhats)": [[6, "daqhats.wait_for_interrupt"]]}})